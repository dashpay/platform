---
name: "Build Docker image"
description: "Build Docker image with Rust caching"
inputs:
  dockerfile:
    description: Path to the Dockerfile, for example `./Dockerfile`
    required: true
  image:
    description: Name of image in Docker Hub, like `dashpay/drive`
    required: true
  push:
    description: Shall we push the image to Docker Hub?
    default: "false"
  dockerhub_username:
    description: User name to use when pushing images to Docker Hub
    required: false
  dockerhub_token:
    description: Docker Hub token to use
    required: false
  image_tag:
    description: Docker image tag
    default: ${{ github.head_ref || github.ref_name }}

runs:
  using: composite
  steps:
    - name: Setup sccache
      uses: mozilla-actions/sccache-action@v0.0.3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@master
      with:
        platforms: amd64,arm64

    - name: Set up Docker Build
      uses: docker/setup-buildx-action@v2.4.1

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ inputs.dockerhub_username }}
        password: ${{ inputs.dockerhub_token }}
      if: inputs.dockerhub_token != ''

    - name: Set suffix
      uses: actions/github-script@v6
      id: suffix
      with:
        result-encoding: string
        script: |
          const fullTag = '${{inputs.image_tag}}';
          if (fullTag.includes('-')) {
            const [, fullSuffix] = fullTag.split('-');
            const [suffix] = fullSuffix.split('.');
            return `-${suffix}`;
          } else {
            return '';
          }

    - name: Set Docker tags and labels
      id: docker_meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ inputs.image }}
        tags: |
          type=match,pattern=v(\d+),group=1,value=${{inputs.image_tag}}
          type=match,pattern=v(\d+.\d+),group=1,value=${{inputs.image_tag}}
          type=match,pattern=v(\d+.\d+.\d+),group=1,value=${{inputs.image_tag}}
          type=match,pattern=v(.*),group=1,value=${{inputs.image_tag}},suffix=
        flavor: |
          suffix=${{ steps.suffix.outputs.result }},onlatest=true
          latest=${{ github.event_name == 'release' }}

    # ARM build takes very long time, so we build PRs for AMD64 only
    - name: Select target platforms
      shell: bash
      id: select_platforms
      run: |
        if  [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]] ; then
          echo "build_platforms=linux/amd64" >> $GITHUB_ENV
        else
          echo "build_platforms=linux/amd64,linux/arm64" >> $GITHUB_ENV
        fi

    - name: Build and push Docker image ${{ inputs.image }}
      id: docker_build
      uses: docker/build-push-action@v4.0.0
      with:
        context: .
        file: ${{ inputs.dockerfile }}
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
        build-args: |
          SCCACHE_GHA_ENABLED=true
          ACTIONS_CACHE_URL=${{ env.ACTIONS_CACHE_URL }}
          ACTIONS_RUNTIME_TOKEN=${{ env.ACTIONS_RUNTIME_TOKEN }}
          CARGO_BUILD_PROFILE=dev
        platforms: ${{ env.build_platforms }}
        push: ${{ inputs.push }}
        cache-from: |
          type=gha
        # In practice, time spent preparing images is much lower than build.
        # We minimize cached info to leave more space for sccache cache.
        cache-to: |
          type=gha,mode=min
