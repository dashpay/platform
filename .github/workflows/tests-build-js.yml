on:
  workflow_call:

jobs:
  build-js:
    name: Build JS
    runs-on: ubuntu-24.04
    steps:
      - name: Configure AWS credentials and bucket region
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # TODO: Use upload artifacts action instead of cache
#      - name: Cache build artifacts
#        uses: strophy/actions-cache@opendal-update
#        id: cache
#        with:
#          bucket: multi-runner-cache-x1xibo9c
#          root: actions-cache
#          path: build-js-artifacts-${{ github.sha }}.tar
#          key: build-js-artifacts/${{ github.sha }}

      - name: Download JS build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-js-artifacts-${{ github.sha }}

      - name: Check if artifacts exist
        id: exists
        run: |
          if test -f build-js-artifacts-${{ github.sha }}.tar; then
            echo "result=true" >> "$GITHUB_OUTPUT"
          else
            echo "result=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Check out repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        if: ${{ steps.exists.outputs.result != 'true' }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        if: ${{ steps.exists.outputs.result != 'true' }}

      - name: Setup Node.JS
        uses: ./.github/actions/nodejs
        if: ${{ steps.exists.outputs.result != 'true' }}

      - name: Setup Rust
        uses: ./.github/actions/rust
        with:
          target: wasm32-unknown-unknown
        if: ${{ steps.exists.outputs.result != 'true' }}

      - name: Configure sccache
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
        if: ${{ steps.exists.outputs.result != 'true' }}

      - name: Install Cargo binstall
        uses: cargo-bins/cargo-binstall@v1.3.1
        if: ${{ steps.exists.outputs.result != 'true' }}

      - name: Install wasm-bindgen-cli
        run: cargo binstall wasm-bindgen-cli@0.2.86
        if: ${{ steps.exists.outputs.result != 'true' }}

      - name: Build JS packages
        run: yarn build
        env:
          RUSTC_WRAPPER: sccache
          SCCACHE_GHA_ENABLED: true
#          SCCACHE_BUCKET: multi-runner-cache-x1xibo9c
#          SCCACHE_REGION: ${{ secrets.AWS_REGION }}
#          SCCACHE_S3_KEY_PREFIX: ${{ runner.os }}/sccache/wasm/wasm32
        if: ${{ steps.exists.outputs.result != 'true' }}

      - name: Ignore only already cached artifacts
        run: |
          find . -name '.gitignore' -exec rm -f {} +
          echo ".yarn" >> .gitignore
          echo "target" >> .gitignore
          echo "node_modules" >> .gitignore
          echo ".nyc_output" >> .gitignore
          echo ".idea" >> .gitignore
          echo ".ultra.exists.json" >> .gitignore
          echo "db/*" >> .gitignore
        if: ${{ steps.exists.outputs.result != 'true' }}

      - name: Get modified files
        id: diff
        run: git ls-files --others --exclude-standard >> artifacts_list.txt
        if: ${{ steps.exists.outputs.result != 'true' }}

      - name: Create an archive of built files
        run: xargs -a artifacts_list.txt tar cvf build-js-artifacts-${{ github.sha }}.tar
        if: ${{ steps.exists.outputs.result != 'true' }}

      - name: Upload the archive of built files
        uses: actions/upload-artifact@v4
        with:
          name: build-js-artifacts-${{ github.sha }}
          path: build-js-artifacts-${{ github.sha }}.tar
          retention-days: 1
          if-no-files-found: error
        if: ${{ steps.exists.outputs.result != 'true' }}

