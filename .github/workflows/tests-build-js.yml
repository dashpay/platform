on:
  workflow_call:

jobs:
  build-js:
    name: Build JS
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - uses: softwareforgood/check-artifact-v4-existence@v0
        id: check-artifact
        with:
          name: js-build-${{ github.sha }}

      - name: Check out repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        if: ${{ steps.check-artifact.outputs.exists != 'true' }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        if: ${{ steps.check-artifact.outputs.exists != 'true' }}

      - name: Setup Node.JS
        uses: ./.github/actions/nodejs
        if: ${{ steps.check-artifact.outputs.exists != 'true' }}

      - name: Setup Rust
        uses: ./.github/actions/rust
        with:
          target: wasm32-unknown-unknown
        if: ${{ steps.check-artifact.outputs.exists != 'true' }}

      - name: Setup sccache
        uses: ./.github/actions/sccache
        with:
          bucket: ${{ vars.CACHE_S3_BUCKET }}
          region: ${{ vars.CACHE_REGION }}
          endpoint: ${{ vars.CACHE_S3_ENDPOINT }}
          access_key_id: ${{ secrets.CACHE_KEY_ID }}
          secret_access_key: ${{ secrets.CACHE_SECRET_KEY }}
        if: ${{ steps.check-artifact.outputs.exists != 'true' }}

      - name: Install Cargo binstall
        uses: cargo-bins/cargo-binstall@v1.3.1
        if: ${{ steps.check-artifact.outputs.exists != 'true' }}

      - name: Install wasm-bindgen-cli
        run: cargo binstall wasm-bindgen-cli@0.2.86
        if: ${{ steps.check-artifact.outputs.exists != 'true' }}

      - name: Install Binaryen
        run: |
          wget https://github.com/WebAssembly/binaryen/releases/download/version_121/binaryen-version_121-x86_64-linux.tar.gz -P /tmp
          tar -xzf /tmp/binaryen-version_121-x86_64-linux.tar.gz -C /tmp
          sudo cp -r /tmp/binaryen-version_121/* /usr/local/
        if: ${{ steps.check-artifact.outputs.exists != 'true' }}

      - name: Build JS packages
        run: yarn build
        if: ${{ steps.check-artifact.outputs.exists != 'true' }}

      - name: Ignore only already cached artifacts
        run: |
          find . -name '.gitignore' -exec rm -f {} +
          echo ".yarn" >> .gitignore
          echo "target" >> .gitignore
          echo "node_modules" >> .gitignore
          echo ".nyc_output" >> .gitignore
          echo ".idea" >> .gitignore
          echo ".ultra.exists.json" >> .gitignore
          echo "db/*" >> .gitignore
        if: ${{ steps.check-artifact.outputs.exists != 'true' }}

      - name: Get modified files
        id: diff
        run: |
          echo "files<<EOF" >> $GITHUB_OUTPUT
          git ls-files --others --exclude-standard >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        if: ${{ steps.check-artifact.outputs.exists != 'true' }}

      - name: Upload the archive of built files
        uses: actions/upload-artifact@v4
        with:
          name: js-build-${{ github.sha }}
          path: ${{ steps.diff.outputs.files }}
          retention-days: 1
          if-no-files-found: error
          include-hidden-files: true
        if: ${{ steps.check-artifact.outputs.exists != 'true' }}
