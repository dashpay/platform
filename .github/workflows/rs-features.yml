name: rs-features

on:
  workflow_call:
    inputs:
      cargo_toml:
        description: Path to Cargo.toml, for example packages/rs-dpp/Cargo.toml
        type: string
        required: true
  workflow_dispatch:
    inputs:
      cargo_toml:
        description: Path to Cargo.toml, for example packages/rs-dpp/Cargo.toml
        type: string
        required: true

jobs:
  list_features:
    name: Verify features in ${{ inputs.cargo_toml }}
    runs-on: ["self-hosted", "linux", "x64", "ubuntu-platform"]
    outputs:
      features: ${{ steps.list.outputs.features }}
    timeout-minutes: 30
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: ./.github/actions/rust
        with:
          target: wasm32-unknown-unknown

      - name: Install yq
        run: |
          mkdir -p $HOME/bin
          wget --compression=auto -q  -O $HOME/bin/yq \
            https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          chmod +x $HOME/bin/yq

      - name: List features
        id: list
        run: |
          set -ex
          echo features=$($HOME/bin/yq -oy eval '.features | keys | .[]' ${{ inputs.cargo_toml }} | tr '\n' ' ') >> $GITHUB_ENV
          echo package=$($HOME/bin/yq -oy eval '.package.name' ${{ inputs.cargo_toml }} ) >> $GITHUB_ENV

      - name: Test each feature in ${{ inputs.cargo_toml }}
        run: |
          echo Test without any features
          cargo test --no-default-features --package $package
          for feature in $features ;  do
            echo Test only feature $feature
            cargo test --no-default-features --package $package --features=$feature
          done
