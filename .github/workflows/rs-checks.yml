name: Package RS Tests

on:
  workflow_call:
    inputs:
      package:
        description: The package name to run tests for
        type: string
        required: true

jobs:
  lint:
    name: Linting
    runs-on: self-hosted
    timeout-minutes: 15
    env:
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
      CARGO_INCREMENTAL: "false"
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy

      - name: Setup Cargo cache
        uses: Swatinem/rust-cache@v2
        with:
          # Don't cache ./target, as it takes tons of space, use sccache instead.
          cache-targets: false
          # We set a shared key, as our cache is reusable between jobs
          shared-key: rust-cargo

      - name: Setup Rust compilation cache
        uses: mozilla-actions/sccache-action@v0.0.3
        with:
          version: "v0.4.1"

      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  formatting:
    name: Formatting
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt

      - name: Check formatting
        run: exit `cargo fmt --check --package=${{ inputs.package }} | wc -l`

  compile:
    name: Compilation errors
    runs-on: self-hosted
    timeout-minutes: 15
    env:
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
      CARGO_INCREMENTAL: "false"
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          target: wasm32-unknown-unknown

      - name: Setup Cargo cache
        uses: Swatinem/rust-cache@v2
        with:
          # Don't cache ./target, as it takes tons of space, use sccache instead.
          cache-targets: false
          # We set a shared key, as our cache is reusable between jobs
          shared-key: rust-cargo

      - name: Setup Rust compilation cache
        uses: mozilla-actions/sccache-action@v0.0.3
        with:
          version: "v0.4.1"

      - run: cargo check --package=${{ inputs.package }}

  test:
    name: Tests
    runs-on: self-hosted
    timeout-minutes: 15
    env:
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
      CARGO_INCREMENTAL: "false"
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          target: wasm32-unknown-unknown

      - name: Setup Cargo cache
        uses: Swatinem/rust-cache@v2
        with:
          # Don't cache ./target, as it takes tons of space, use sccache instead.
          cache-targets: false
          # We set a shared key, as our cache is reusable between jobs
          shared-key: rust-cargo

      - name: Setup Rust compilation cache
        uses: mozilla-actions/sccache-action@v0.0.3
        with:
          version: "v0.4.1"

      - name: Run tests
        run: cargo test --package=${{ inputs.package }} --all-features
