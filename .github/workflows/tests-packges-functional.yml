on:
  workflow_call:

jobs:
  test-functional:
    name: Run functional tests
    runs-on: [ "self-hosted", "linux", "arm64", "ubuntu-platform" ]
    timeout-minutes: 15
    env:
      CHROME_BIN: /usr/bin/brave-browser
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Configure AWS credentials and bucket region
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}

      - name: Setup Node.JS
        uses: ./.github/actions/nodejs

      - name: Restore JS build artifacts
        uses: strophy/actions-cache@opendal-update
        with:
          bucket: multi-runner-cache-x1xibo9c
          root: actions-cache
          path: build-js-artifacts-${{ github.sha }}.tar
          key: build-js-artifacts/${{ github.sha }}

      - name: Unpack JS build artifacts archive
        run: tar -xf build-js-artifacts-${{ github.sha }}.tar

      - name: Get dashmate fingerprint
        id: dashmate-fingerprint
        run: echo "sha=$(git log -1 --format="%h" -- packages/dashmate)" >> $GITHUB_OUTPUT

      # TODO: Use upload artifacts action instead
      - name: Restore local network data
        id: local-network-data
        uses: strophy/actions-cache/restore@opendal-update
        with:
          bucket: multi-runner-cache-x1xibo9c
          root: local-network-data
          path: |
            /home/ubuntu/.dashmate
            **/.env
            dashmate_volumes_dump
          key: local-network-volumes/${{ steps.dashmate-fingerprint.outputs.sha }}

      - name: Restore dashmate volumes
        run: ./scripts/dashmate/volumes/restore.sh
        if: steps.local-network-data.outputs.cache-hit == 'true'

      - name: Setup local network
        run: |
          set -ex

          # create tenderdash blocks every 10s to speed up test suite
          yarn dashmate config set --config=local platform.drive.tenderdash.consensus.createEmptyBlocksInterval "10s"

          # collect drive logs for bench suite
          yarn dashmate config set --config=local platform.drive.abci.logs.stdout.level "trace"

          ./scripts/setup_local_network.sh
          ./scripts/configure_test_suite.sh
          ./scripts/configure_dotenv.sh
        shell: bash
        if: steps.local-network-data.outputs.cache-hit != 'true'

      - name: Dump dashmate volumes
        run: ./scripts/dashmate/volumes/dump.sh
        if: steps.local-network-data.outputs.cache-hit != 'true'

      - name: Save local network data
        uses: strophy/actions-cache/save@opendal-update
        with:
          bucket: multi-runner-cache-x1xibo9c
          root: local-network-data
          path: |
            /home/ubuntu/.dashmate
            **/.env
            dashmate_volumes_dump
          key: local-network-volumes/${{ steps.dashmate-fingerprint.outputs.sha }}
        if: steps.local-network-data.outputs.cache-hit != 'true'

      - name: Configure pre-built docker images
        run: |
          DOCKER_HUB_ORG="${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com"
          SHA_TAG=sha-${{ github.sha }}
          VERSION=$(cat package.json | jq -r '.version')

          # Login to ECR
          aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin $DOCKER_HUB_ORG

          # Dashmate helper
          docker pull $DOCKER_HUB_ORG/dashmate-helper:$SHA_TAG
          docker tag $DOCKER_HUB_ORG/dashmate-helper:$SHA_TAG dashpay/dashmate-helper:$VERSION

          # Replace DAPI and Drive images with new org and tag in dashmate config
          sed -i -E "s/dashpay\/(drive|dapi):[^\"]+/${DOCKER_HUB_ORG}\/\1:${SHA_TAG}/g" /home/ubuntu/.dashmate/config.json

          cat /home/ubuntu/.dashmate/config.json

      - name: Start local network
        run: yarn start

      - name: Run Wallet functional tests
        run: yarn workspace @dashevo/wallet-lib test:functional

      - name: Run SDK functional tests
        run: yarn workspace dash test:functional

      - name: Show Docker logs
        if: ${{ failure() }}
        uses: jwalton/gh-docker-logs@v2
