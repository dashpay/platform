name: All Packages

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
      - v[0-9]+\.[0-9]+-dev
  push:
    branches:
      - master
      - v[0-9]+\.[0-9]+-dev
  schedule:
    - cron: "30 4 * * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deps-versions:
    name: JS dependency versions check
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Setup Node.JS
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Enable corepack
        run: corepack enable

      - name: Validate workspaces
        run: yarn constraints

  crates-security:
    name: Crates security audit
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Audit crates
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  npm-security:
    name: NPM security audit
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Enable corepack
        run: corepack enable

      - name: Audit NPM
        run: yarn npm audit --environment production --all --recursive --ignore 1091050
        # ignore "public ip"

  test-suite:
    name: Run Platform Test Suite
    runs-on: self-hosted
    timeout-minutes: 120
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup Node.JS
        uses: ./.github/actions/nodejs

      - name: Setup Rust
        uses: ./.github/actions/rust
        with:
          toolchain: stable
          target: wasm32-unknown-unknown

      - name: Build SDK
        run: yarn build --filter "+dash"

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v2
        with:
          install: true
          config-inline: |
            [worker.oci]
              gc = true
              gckeepstorage = 40000 # 40 GB
              [[worker.oci.gcpolicy]]
                all = true
                keepBytes = 30000000000 # 30 GB
                keepDuration = 864000 # 10 days

      - name: Load Docker mount cache
        uses: dcginfra/buildkit-cache-dance/inject@main

      - name: Setup local network
        run: yarn configure

      - name: Start local network
        run: yarn start
        env:
          CACHE_FROM: type=s3,region=eu-west-1,bucket=platform-runner-cache
          CACHE_TO: type=s3,region=eu-west-1,bucket=platform-runner-cache,mode=max

      - name: Store Docker mount cache
        uses: dcginfra/buildkit-cache-dance/extract@main

      - name: Run test suite
        run: yarn test:suite

      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3

      - name: Show Docker logs
        if: ${{ failure() }}
        uses: jwalton/gh-docker-logs@v2

  test-suite-browsers:
    name: Run Platform Test Suite in Browsers
    runs-on: self-hosted
    timeout-minutes: 120
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Check out repo
        uses: actions/checkout@v3

      - name: Setup Node.JS
        uses: ./.github/actions/nodejs

      - name: Setup Rust
        uses: ./.github/actions/rust
        with:
          toolchain: stable
          target: wasm32-unknown-unknown

      - name: Build SDK
        run: yarn build --filter "+dash"

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v2
        with:
          install: true
          config-inline: |
            [worker.oci]
              gc = true
              gckeepstorage = 40000 # 40 GB
              [[worker.oci.gcpolicy]]
                all = true
                keepBytes = 30000000000 # 30 GB
                keepDuration = 864000 # 10 days

      - name: Load Docker mount cache
        uses: dcginfra/buildkit-cache-dance/inject@main

      - name: Setup local network
        run: yarn configure

      - name: Start local network
        run: yarn start
        env:
          CACHE_FROM: type=s3,region=eu-west-1,bucket=platform-runner-cache
          CACHE_TO: type=s3,region=eu-west-1,bucket=platform-runner-cache,mode=max

      - name: Store Docker mount cache
        uses: dcginfra/buildkit-cache-dance/extract@main

      - name: Run test suite in browsers
        run: yarn test:suite:browsers

      - name: Show Docker logs
        if: ${{ failure() }}
        uses: jwalton/gh-docker-logs@v2

  codeql:
    name: Code security audit
    runs-on: self-hosted
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup Node.JS
        uses: ./.github/actions/nodejs

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
          config-file: ./.github/codeql/codeql-config.yml

      - name: Setup Rust
        uses: ./.github/actions/rust
        with:
          toolchain: stable
          target: wasm32-unknown-unknown

      - name: Build package and dependencies
        run: yarn build --filter "+dash"

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
