name: Build WASM SDK

on:
  pull_request:
    paths:
      - 'packages/wasm-sdk/**'
      - 'packages/rs-sdk/**'
      - 'packages/rs-drive-proof-verifier/**'
      - 'packages/rs-platform-value/**'
      - 'packages/rs-dpp/**'
      - 'packages/rs-drive/src/verify/**'
      - 'packages/rs-context-provider/**'
  push:
    branches:
      - main
      - master
      - 'v[0-9]+.[0-9]+-dev'
      - 'v[0-9]+.[0-9]+-dev-sdk'
    paths:
      - 'packages/wasm-sdk/**'
      - 'packages/rs-sdk/**'
      - 'packages/rs-drive-proof-verifier/**'
      - 'packages/rs-platform-value/**'
      - 'packages/rs-dpp/**'
      - 'packages/rs-drive/src/verify/**'
      - 'packages/rs-context-provider/**'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-C lto=off"
  CARGO_PROFILE_RELEASE_LTO: false

jobs:
  build-wasm-sdk:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
          
      - name: Install protoc
        run: |
          curl -Lo /tmp/protoc.zip \
            "https://github.com/protocolbuffers/protobuf/releases/download/v27.3/protoc-27.3-linux-x86_64.zip"
          unzip -o /tmp/protoc.zip -d ${HOME}/.local
          echo "${HOME}/.local/bin" >> $GITHUB_PATH
          export PATH="${PATH}:${HOME}/.local/bin"
          
      - name: Install clang
        run: |
          sudo apt update -qq
          sudo apt install -qq --yes clang llvm
          
      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-wasm-sdk-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-wasm-sdk-
            
      - name: Install wasm-pack
        run: |
          if ! command -v wasm-pack &> /dev/null; then
            echo "Installing wasm-pack..."
            curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
          else
            echo "wasm-pack already installed"
          fi
          
      - name: Install wasm-opt
        run: |
          if ! command -v wasm-opt &> /dev/null; then
            echo "Installing wasm-opt from GitHub releases..."
            # Get the latest release version
            WASM_OPT_VERSION=$(curl -s https://api.github.com/repos/WebAssembly/binaryen/releases/latest | grep -oP '"tag_name": "\K[^"]+')
            echo "Installing wasm-opt version: $WASM_OPT_VERSION"
            
            # Download and extract binaryen
            curl -L "https://github.com/WebAssembly/binaryen/releases/download/${WASM_OPT_VERSION}/binaryen-${WASM_OPT_VERSION}-x86_64-linux.tar.gz" -o /tmp/binaryen.tar.gz
            tar -xzf /tmp/binaryen.tar.gz -C /tmp
            
            # Move wasm-opt to PATH
            sudo mv /tmp/binaryen-${WASM_OPT_VERSION}/bin/wasm-opt /usr/local/bin/
            sudo chmod +x /usr/local/bin/wasm-opt
            
            # Clean up
            rm -rf /tmp/binaryen.tar.gz /tmp/binaryen-${WASM_OPT_VERSION}
            
            echo "wasm-opt installed successfully"
          else
            echo "wasm-opt already installed"
          fi
          
      - name: Build WASM SDK
        working-directory: packages/wasm-sdk
        run: |
          chmod +x build.sh
          ./build.sh
          
      - name: Verify build output
        working-directory: packages/wasm-sdk
        run: |
          echo "Checking build output..."
          ls -lah pkg/
          # Verify required files exist
          test -f pkg/wasm_sdk_bg.wasm
          test -f pkg/optimized.wasm
          test -f pkg/wasm_sdk.js
          test -f pkg/wasm_sdk.d.ts
          test -f pkg/package.json
          echo "Build verification successful!"
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wasm-sdk-build
          path: packages/wasm-sdk/pkg/
          retention-days: 7