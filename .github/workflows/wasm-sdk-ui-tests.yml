name: WASM SDK UI Automation Tests

on:
  # Trigger after wasm-sdk-build workflow completes successfully
  workflow_run:
    workflows: ["Build WASM SDK"]
    types:
      - completed
    branches:
      - master
      - 'v[0-9]+.[0-9]+-dev'
  
  # Manual trigger for standalone testing
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of tests to run'
        required: true
        default: 'all'
        type: choice
        options:
          - smoke
          - queries
          - parameterized
          - all
      browser:
        description: 'Browser to use for testing'
        required: false
        default: 'chromium'
        type: choice
        options:
          - chromium
          - firefox
          - webkit
      headed:
        description: 'Run tests in headed mode (visible browser)'
        required: false
        default: false
        type: boolean
      debug:
        description: 'Enable debug output'
        required: false
        default: false
        type: boolean
      workflow_run_id:
        description: 'Workflow run ID to download WASM SDK build from (for manual runs)'
        required: false
        type: string

jobs:
  ui-tests:
    name: Run WASM SDK UI Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    # Only run if build workflow succeeded (for workflow_run) or if manually triggered
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    
    env:
      CI: true
      DEBUG: ${{ inputs.debug || 'false' }}
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Download WASM SDK build artifacts
        uses: actions/download-artifact@v4
        with:
          # For workflow_run, download from the triggering workflow
          # For manual dispatch, use provided workflow_run_id or latest
          run-id: ${{ github.event.workflow_run.id || inputs.workflow_run_id }}
          name: wasm-sdk-build
          path: packages/wasm-sdk/pkg/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Verify WASM SDK artifacts
        working-directory: packages/wasm-sdk
        run: |
          echo "Verifying downloaded WASM SDK artifacts..."
          ls -lah pkg/
          
          # Verify all required files exist
          required_files=(
            "pkg/wasm_sdk_bg.wasm"
            "pkg/optimized.wasm" 
            "pkg/wasm_sdk.js"
            "pkg/wasm_sdk.d.ts"
            "pkg/package.json"
          )
          
          for file in "${required_files[@]}"; do
            if [ ! -f "$file" ]; then
              echo "❌ Missing required file: $file"
              exit 1
            else
              echo "✅ Found: $file"
            fi
          done
          
          echo "🎉 All WASM SDK artifacts verified successfully!"
          
      - name: Install test dependencies
        working-directory: packages/wasm-sdk/test/ui-automation
        run: |
          echo "Installing UI test dependencies..."
          npm install
          
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('packages/wasm-sdk/test/ui-automation/package.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-
            
      - name: Install Playwright browsers
        working-directory: packages/wasm-sdk/test/ui-automation
        run: |
          echo "Installing Playwright browsers..."
          npx playwright install --with-deps ${{ inputs.browser || 'chromium' }}
          
      - name: Run smoke tests
        if: (inputs.test_type == 'smoke' || inputs.test_type == 'all') || github.event_name == 'workflow_run'
        working-directory: packages/wasm-sdk/test/ui-automation
        run: |
          echo "🧪 Running smoke tests..."
          if [ "${{ inputs.headed }}" == "true" ]; then
            npm run test:headed -- tests/basic-smoke.spec.js
          else
            npm run test:smoke
          fi
          
      - name: Run query execution tests
        if: (inputs.test_type == 'queries' || inputs.test_type == 'all') || github.event_name == 'workflow_run'
        working-directory: packages/wasm-sdk/test/ui-automation
        run: |
          echo "🔍 Running query execution tests..."
          if [ "${{ inputs.headed }}" == "true" ]; then
            npm run test:headed -- tests/query-execution.spec.js
          else
            npm run test:queries
          fi
          
      - name: Run parameterized tests
        if: (inputs.test_type == 'parameterized' || inputs.test_type == 'all') || github.event_name == 'workflow_run'
        working-directory: packages/wasm-sdk/test/ui-automation
        run: |
          echo "⚙️ Running parameterized tests..."
          if [ "${{ inputs.headed }}" == "true" ]; then
            npm run test:headed -- tests/parameterized-queries.spec.js
          else
            npm run test:parameterized
          fi
          
      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ inputs.test_type || 'all' }}-${{ inputs.browser || 'chromium' }}-${{ github.run_number }}
          path: packages/wasm-sdk/test/ui-automation/playwright-report/
          retention-days: 30
          
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ inputs.test_type || 'all' }}-${{ inputs.browser || 'chromium' }}-${{ github.run_number }}
          path: |
            packages/wasm-sdk/test/ui-automation/test-results/
            packages/wasm-sdk/test/ui-automation/test-results.json
          retention-days: 30
          
      - name: Upload Screenshots and Videos
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: test-failures-${{ inputs.test_type || 'all' }}-${{ inputs.browser || 'chromium' }}-${{ github.run_number }}
          path: |
            packages/wasm-sdk/test/ui-automation/test-results/**/*.png
            packages/wasm-sdk/test/ui-automation/test-results/**/*.webm
          retention-days: 30
          
      - name: Display Test Summary
        if: always()
        working-directory: packages/wasm-sdk/test/ui-automation
        run: |
          echo "## WASM SDK UI Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ github.event_name }}" == "workflow_run" ]; then
            echo "- **Triggered by**: WASM SDK Build (workflow_run)" >> $GITHUB_STEP_SUMMARY
            echo "- **Build Workflow**: ${{ github.event.workflow_run.html_url }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Triggered by**: Manual dispatch" >> $GITHUB_STEP_SUMMARY
            echo "- **Test Type**: ${{ inputs.test_type }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Browser**: ${{ inputs.browser }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Headed Mode**: ${{ inputs.headed }}" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "- **Debug**: ${{ env.DEBUG }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Show test results if available
          if [ -f "test-results.json" ]; then
            echo "### Test Results" >> $GITHUB_STEP_SUMMARY
            echo '```json' >> $GITHUB_STEP_SUMMARY
            jq '.stats' test-results.json >> $GITHUB_STEP_SUMMARY 2>/dev/null || echo "Test results available in artifacts" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi
          
          # List available artifacts
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Available Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- **Playwright Report**: Detailed HTML report with test results" >> $GITHUB_STEP_SUMMARY
          echo "- **Test Results**: JSON results and raw output files" >> $GITHUB_STEP_SUMMARY
          if [ "${{ job.status }}" == "failure" ]; then
            echo "- **Test Failures**: Screenshots and videos of failed tests" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Add quick links
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Quick Links" >> $GITHUB_STEP_SUMMARY
          echo "- [WASM SDK](https://github.com/${{ github.repository }}/tree/${{ github.sha }}/packages/wasm-sdk)" >> $GITHUB_STEP_SUMMARY
          echo "- [UI Tests](https://github.com/${{ github.repository }}/tree/${{ github.sha }}/packages/wasm-sdk/test/ui-automation)" >> $GITHUB_STEP_SUMMARY
          