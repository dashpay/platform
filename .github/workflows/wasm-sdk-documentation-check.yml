name: Check WASM SDK Documentation

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'packages/wasm-sdk/index.html'
      - 'packages/wasm-sdk/docs.html'
      - 'packages/wasm-sdk/AI_REFERENCE.md'
      - 'packages/wasm-sdk/docs_manifest.json'
      - 'packages/wasm-sdk/generate_docs.py'
      - 'packages/wasm-sdk/check_documentation.py'
      - '.github/workflows/wasm-sdk-documentation-check.yml'
  push:
    branches:
      - master
      - 'v*-dev'
    paths:
      - 'packages/wasm-sdk/index.html'
      - 'packages/wasm-sdk/docs.html'
      - 'packages/wasm-sdk/AI_REFERENCE.md'
      - 'packages/wasm-sdk/docs_manifest.json'
      - 'packages/wasm-sdk/generate_docs.py'
      - 'packages/wasm-sdk/check_documentation.py'
      - '.github/workflows/wasm-sdk-documentation-check.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-wasm-sdk-documentation:
    name: Check WASM SDK Documentation
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Check documentation completeness
        id: doc-check
        working-directory: packages/wasm-sdk
        run: |
          # Run the documentation check
          if python3 check_documentation.py; then
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "status=failure" >> $GITHUB_OUTPUT
          fi
          
          # Note: At this point, the documentation hasn't been regenerated yet,
          # so this check will only detect if the PR already includes documentation changes
          if git diff --quiet HEAD -- docs.html docs_manifest.json AI_REFERENCE.md; then
            echo "docs_modified=false" >> $GITHUB_OUTPUT
          else
            echo "docs_modified=true" >> $GITHUB_OUTPUT
          fi

      - name: Upload documentation check report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: documentation-check-report
          path: packages/wasm-sdk/documentation-check-report.txt
          
      - name: Comment PR
        if: github.event_name == 'pull_request' && steps.doc-check.outputs.status == 'failure'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const reportPath = 'packages/wasm-sdk/documentation-check-report.txt';
            
            if (fs.existsSync(reportPath)) {
              const report = fs.readFileSync(reportPath, 'utf8');
              const status = '${{ steps.doc-check.outputs.status }}' === 'success' ? '✅' : '❌';
              
              // Find existing comment
              const { data: comments } = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
              });
              
              const botComment = comments.find(comment => 
                comment.user.type === 'Bot' && 
                comment.body.includes('WASM SDK Documentation Check')
              );
              
              const body = `### ${status} WASM SDK Documentation Check\n\n\`\`\`\n${report}\n\`\`\`\n\n**To fix documentation issues:**\n\`\`\`bash\ncd packages/wasm-sdk\npython3 generate_docs.py\n\`\`\``;
              
              if (botComment) {
                await github.rest.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: botComment.id,
                  body: body
                });
              } else {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: body
                });
              }
            }

      - name: Auto-update documentation (non-protected branches)
        if: github.event_name == 'push' && !contains(github.ref, 'master') && !contains(github.ref, 'main') && steps.doc-check.outputs.status == 'failure'
        working-directory: packages/wasm-sdk
        run: |
          # Generate updated documentation
          python3 generate_docs.py
          # Check if there are changes
          if ! git diff --quiet docs.html docs_manifest.json AI_REFERENCE.md; then
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git add docs.html docs_manifest.json AI_REFERENCE.md
            git commit -m "chore: update WASM SDK documentation [skip ci]"
            git push
          fi
          
      - name: Create documentation update PR (protected branches)
        if: github.event_name == 'push' && (contains(github.ref, 'master') || contains(github.ref, 'main')) && steps.doc-check.outputs.status == 'failure'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update WASM SDK documentation"
          title: "chore: update WASM SDK documentation"
          body: |
            This PR updates the WASM SDK documentation to match the current implementation.
            
            Auto-generated by GitHub Actions.
          branch: auto-update-wasm-docs-${{ github.run_number }}
          base: ${{ github.ref_name }}
          path: packages/wasm-sdk

      - name: Fail if documentation is out of date
        if: steps.doc-check.outputs.status == 'failure' && github.event_name == 'pull_request'
        run: |
          echo "Documentation is out of date. Please run 'python3 generate_docs.py' in packages/wasm-sdk/"
          exit 1