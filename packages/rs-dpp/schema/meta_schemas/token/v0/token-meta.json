{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://github.com/dashpay/platform/blob/master/packages/rs-dpp/schema/meta_schemas/document/v0/document-meta.json",
  "type": "object",
  "$defs": {
    "localization": {
      "type": "string",
      "pattern": "^[\\p{L}\\p{N}]*$",
      "minLength": 1,
      "maxLength": 64,
      "$comment": "Allow only alphanumeric characters"
    },
    "identifier": {
      "type": "string",
      "contentMediaType": "application/x.dash.dpp.identifier",
      "byteArray": true,
      "minLength": 32,
      "maxLength": 32,
      "description": "A 32-byte identifier"
    },
    "optionalIdentifier": {
      "type": ["string", "null"],
      "contentMediaType": "application/x.dash.dpp.identifier",
      "byteArray": true,
      "minLength": 32,
      "maxLength": 32,
      "description": "A 32-byte identifier"
    },
    "authorizedActionTakers": {
      "description": "Specifies who is authorized to take certain actions",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "type": { "const": "noOne" }
          },
          "required": ["type"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "type": { "const": "contractOwner" }
          },
          "required": ["type"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "type": { "const": "mainGroup" }
          },
          "required": ["type"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "type": { "const": "specifiedIdentities" },
            "identifiers": {
              "type": "array",
              "description": "An array of authorized identifiers",
              "items": {
                "$ref": "#/$defs/identifier"
              },
              "uniqueItems": true
            },
            "requiredSignersCount": {
              "$ref": "#/$defs/requiredSignersCount",
              "description": "Rules for required signers within these specified identities"
            }
          },
          "required": ["type", "identifiers", "requiredSignersCount"],
          "additionalProperties": false
        }
      ]
    },
    "changeControlRules": {
      "type": "object",
      "description": "Defines who can make changes to certain parameters and who can change that ability",
      "properties": {
        "authorizedToMakeChange": {
          "$ref": "#/$defs/authorizedActionTakers",
          "description": "Who is authorized to make the relevant change"
        },
        "authorizedToChangeAuthorizedActionTakers": {
          "$ref": "#/$defs/authorizedActionTakers",
          "description": "Who is authorized to modify the list of people who can make the change"
        },
        "changingAuthorizedActionTakersToNoOneAllowed": {
          "type": "boolean",
          "description": "Whether it is allowed to change the authorized action takers to no one in the future"
        },
        "changingAuthorizedActionTakersToContractOwnerAllowed": {
          "type": "boolean",
          "description": "Whether it is allowed to change the authorized action takers to contract owner in the future"
        }
      },
      "required": [
        "authorizedToMakeChange",
        "authorizedToChangeAuthorizedActionTakers",
        "changingAuthorizedActionTakersToNoOneAllowed",
        "changingAuthorizedActionTakersToContractOwnerAllowed"
      ],
      "additionalProperties": false
    },
    "requiredSignersCount": {
      "type": "integer",
      "description": "How many signers are required to authorize actions",
      "minimum": 1,
      "maximum": 255
    }
  },
  "properties": {
    "description": {
      "type": "string",
      "maxLength": 1024,
      "description": "Token description"
    },
    "displayConventions": {
      "type": "object",
      "description": "Token display conventions including capitalization and localization",
      "properties": {
        "capitalize": {
          "type": "boolean",
          "description": "Indicates whether token names should be capitalized"
        },
        "localizations": {
          "type": "object",
          "description": "A map of locale keys to their corresponding singular/plural forms",
          "additionalProperties": {
            "type": "object",
            "description": "Localization forms for a given locale key",
            "properties": {
              "singularForm": {
                "$ref": "#/$defs/localization"
              },
              "pluralForm": {
                "$ref": "#/$defs/localization"
              }
            },
            "required": [
              "singularForm",
              "pluralForm"
            ],
            "additionalProperties": false
          },
          "maxProperties": 255,
          "minProperties": 1,
          "propertyNames": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          }
        },
        "decimals": {
          "type": "integer",
          "minimum": 0,
          "description": "The number of decimal places the token supports"
        }
      },
      "required": ["capitalize", "localizations", "decimals"],
      "additionalProperties": false
    },
    "initialSupply": {
      "type": "integer",
      "minimum": 0,
      "description": "The initial (base) supply of the token at creation time"
    },
    "initialSupplyDestinationIdentityId": {
      "$ref": "#/$defs/optionalIdentifier",
      "description": "Optional identity where initial supply tokens are sent. If not set, the data contract owner identity is used"
    },
    "maxSupply": {
      "type": ["integer", "null"],
      "minimum": 1,
      "description": "The maximum supply the token can ever have, or null if there is no maximum"
    },
    "maxSupplyChangeRules": {
      "$ref": "#/$defs/changeControlRules",
      "description": "Rules governing who can change the max supply and under what conditions"
    },
    "mintedTokensDestinationIdentityId": {
      "$ref": "#/$defs/optionalIdentifier",
      "description": "Optional identity where newly minted tokens are sent. If set then minted tokens can be sent only to this identity"
    },
    "mintedTokensDestinationIdentityRules": {
      "$ref": "#/$defs/changeControlRules",
      "description": "Rules for changing the new tokens destination identity"
    },
    "mintingRules": {
      "$ref": "#/$defs/changeControlRules",
      "description": "Rules governing who and how new tokens can be minted manually"
    },
    "burningRules": {
      "$ref": "#/$defs/changeControlRules",
      "description": "Rules governing who and how tokens can be burned manually"
    },
    "mainControlGroup": {
      "type": "array",
      "description": "The main control group, if present",
      "items": {
        "type": "object",
        "properties": {
          "identifiers": {
            "type": "array",
            "description": "A set of identities representing members of the control group",
            "items": {
              "$ref": "#/$defs/identifier"
            },
            "uniqueItems": true
          },
          "requiredSignersCount": {
            "$ref": "#/$defs/requiredSignersCount"
          }
        },
        "required": ["identifiers", "requiredSignersCount"],
        "additionalProperties": false
      }
    },
    "mainControlGroupCanBeModified": {
      "$ref": "#/$defs/authorizedActionTakers",
      "description": "Specifies which entities are authorized to modify the main control group"
    },
    "metadata": {
      "type": "object",
      "propertyNames": {
        "type": "string",
        "maxLength": 255
      },
      "additionalProperties": {
        "type": "string",
        "maxLength": 1024
      },
      "minProperties": 1,
      "maxProperties": 255,
      "description": "Token arbitrary metadata"
    }
  },
  "required": [
    "displayConventions",
    "initialSupply"
  ],
  "additionalProperties": false
}
