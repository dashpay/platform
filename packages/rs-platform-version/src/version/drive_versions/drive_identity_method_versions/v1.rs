use crate::version::drive_versions::drive_identity_method_versions::{
    DriveIdentityContractInfoMethodVersions, DriveIdentityCostEstimationMethodVersions,
    DriveIdentityFetchAttributesMethodVersions, DriveIdentityFetchFullIdentityMethodVersions,
    DriveIdentityFetchMethodVersions, DriveIdentityFetchPartialIdentityMethodVersions,
    DriveIdentityFetchPublicKeyHashesMethodVersions, DriveIdentityInsertMethodVersions,
    DriveIdentityKeyHashesToIdentityInsertMethodVersions, DriveIdentityKeysFetchMethodVersions,
    DriveIdentityKeysInsertMethodVersions, DriveIdentityKeysMethodVersions,
    DriveIdentityKeysProveMethodVersions, DriveIdentityMethodVersions,
    DriveIdentityProveMethodVersions, DriveIdentityUpdateMethodVersions,
    DriveIdentityWithdrawalDocumentMethodVersions, DriveIdentityWithdrawalMethodVersions,
    DriveIdentityWithdrawalTransactionIndexMethodVersions,
    DriveIdentityWithdrawalTransactionMethodVersions,
    DriveIdentityWithdrawalTransactionQueueMethodVersions,
};

pub const DRIVE_IDENTITY_METHOD_VERSIONS_V1: DriveIdentityMethodVersions =
    DriveIdentityMethodVersions {
        fetch: DriveIdentityFetchMethodVersions {
            public_key_hashes: DriveIdentityFetchPublicKeyHashesMethodVersions {
                fetch_full_identities_by_unique_public_key_hashes: 0,
                fetch_full_identity_by_unique_public_key_hash: 0,
                fetch_identity_id_by_unique_public_key_hash: 0,
                fetch_identity_ids_by_non_unique_public_key_hash: 0,
                fetch_identity_ids_by_unique_public_key_hashes: 0,
                fetch_serialized_full_identity_by_unique_public_key_hash: 0,
                has_any_of_unique_public_key_hashes: 0,
                has_non_unique_public_key_hash: 0,
                has_non_unique_public_key_hash_already_for_identity: 0,
                has_unique_public_key_hash: 0,
            },
            attributes: DriveIdentityFetchAttributesMethodVersions {
                revision: 0,
                nonce: 0,
                identity_contract_nonce: 0,
                balance: 0,
                balance_include_debt: 0,
                negative_balance: 0,
            },
            partial_identity: DriveIdentityFetchPartialIdentityMethodVersions {
                fetch_identity_revision_with_keys: 0,
                fetch_identity_balance_with_keys: 0,
                fetch_identity_balance_with_keys_and_revision: 0,
                fetch_identity_with_balance: 0,
                fetch_identity_keys: 0,
            },
            full_identity: DriveIdentityFetchFullIdentityMethodVersions {
                fetch_full_identity: Some(0),
                fetch_full_identities: Some(0),
            },
        },
        prove: DriveIdentityProveMethodVersions {
            full_identity: 0,
            full_identities: 0,
            identity_nonce: 0,
            identity_contract_nonce: 0,
            identities_contract_keys: 0,
            prove_full_identities_by_unique_public_key_hashes: 0,
            prove_full_identity_by_unique_public_key_hash: 0,
            prove_identity_id_by_unique_public_key_hash: 0,
            prove_identity_ids_by_unique_public_key_hashes: 0,
        },
        keys: DriveIdentityKeysMethodVersions {
            fetch: DriveIdentityKeysFetchMethodVersions {
                fetch_all_current_identity_keys: 0,
                fetch_all_identity_keys: 0,
                fetch_identities_all_keys: 0,
                fetch_identity_keys: 0,
                fetch_identities_contract_keys: 0,
            },
            prove: DriveIdentityKeysProveMethodVersions {
                prove_identities_all_keys: 0,
                prove_identity_keys: 0,
            },
            insert: DriveIdentityKeysInsertMethodVersions {
                create_key_tree_with_keys: 0,
                create_new_identity_key_query_trees: 0,
                insert_key_searchable_references: 0,
                insert_key_to_storage: 0,
                insert_new_non_unique_key: 0,
                insert_new_unique_key: 0,
                replace_key_in_storage: 0,
            },
            insert_key_hash_identity_reference:
                DriveIdentityKeyHashesToIdentityInsertMethodVersions {
                    add_estimation_costs_for_insert_non_unique_public_key_hash_reference: 0,
                    add_estimation_costs_for_insert_unique_public_key_hash_reference: 0,
                    insert_non_unique_public_key_hash_reference_to_identity: 0,
                    insert_reference_to_non_unique_key: 0,
                    insert_reference_to_unique_key: 0,
                    insert_unique_public_key_hash_reference_to_identity: 0,
                },
        },
        update: DriveIdentityUpdateMethodVersions {
            update_identity_revision: 0,
            merge_identity_nonce: 0,
            update_identity_negative_credit_operation: 0,
            initialize_identity_revision: 0,
            disable_identity_keys: 0,
            re_enable_identity_keys: 0,
            add_new_non_unique_keys_to_identity: 0,
            add_new_unique_keys_to_identity: 0,
            add_new_keys_to_identity: 0,
            insert_identity_balance: 0,
            initialize_negative_identity_balance: 0,
            add_to_identity_balance: 0,
            add_to_previous_balance: 0,
            apply_balance_change_from_fee_to_identity: 0,
            remove_from_identity_balance: 0,
            refresh_identity_key_reference_operations: 0,
        },
        insert: DriveIdentityInsertMethodVersions {
            add_new_identity: 0,
        },
        contract_info: DriveIdentityContractInfoMethodVersions {
            add_potential_contract_info_for_contract_bounded_key: 0,
            refresh_potential_contract_info_key_references: 0,
            merge_identity_contract_nonce: 0,
        },
        cost_estimation: DriveIdentityCostEstimationMethodVersions {
            for_authentication_keys_security_level_in_key_reference_tree: 0,
            for_balances: 0,
            for_contract_info: 0,
            for_contract_info_group: 0,
            for_contract_info_group_keys: 0,
            for_contract_info_group_key_purpose: 0,
            for_keys_for_identity_id: 0,
            for_negative_credit: 0,
            for_purpose_in_key_reference_tree: 0,
            for_root_key_reference_tree: 0,
            for_update_revision: 0,
        },
        withdrawals: DriveIdentityWithdrawalMethodVersions {
            document: DriveIdentityWithdrawalDocumentMethodVersions {
                fetch_oldest_withdrawal_documents_by_status: 0,
                find_withdrawal_documents_by_status_and_transaction_indices: 0,
            },
            transaction: DriveIdentityWithdrawalTransactionMethodVersions {
                index: DriveIdentityWithdrawalTransactionIndexMethodVersions {
                    fetch_next_withdrawal_transaction_index: 0,
                    add_update_next_withdrawal_transaction_index_operation: 0,
                },
                queue: DriveIdentityWithdrawalTransactionQueueMethodVersions {
                    add_enqueue_untied_withdrawal_transaction_operations: 0,
                    dequeue_untied_withdrawal_transactions: 0,
                    remove_broadcasted_withdrawal_transactions_after_completion_operations: 0,
                    move_broadcasted_withdrawal_transactions_back_to_queue_operations: 0,
                },
            },
            calculate_current_withdrawal_limit: 0,
        },
    };
