{
  "version": "1.0.3",
  "generated_at": "2025-08-13T17:10:00.000000",
  "source": "index.html",
  "queries": {
    "identity": {
      "label": "Identity Queries",
      "queries": {
        "getIdentity": {
          "label": "Get Identity",
          "description": "Fetch an identity by its identifier",
          "inputs": [
            {
              "name": "id",
              "type": "text",
              "label": "Identity ID",
              "required": true
            }
          ]
        },
        "getIdentityKeys": {
          "label": "Get Identity Keys",
          "description": "Retrieve keys associated with an identity",
          "inputs": [
            {
              "name": "identityId",
              "type": "text",
              "label": "Identity ID",
              "required": true
            },
            {
              "name": "keyRequestType",
              "type": "select",
              "label": "Key Request Type",
              "required": false,
              "options": [
                {
                  "value": "all",
                  "label": "All Keys (AllKeys {}) - Get all keys for the identity"
                },
                {
                  "value": "specific",
                  "label": "Specific Keys (SpecificKeys with key_ids) - Get specific keys by ID [ðŸš§ Work in Progress]"
                },
                {
                  "value": "search",
                  "label": "Search Keys (SearchKey with purpose_map) - Search by purpose and security level [ðŸš§ Work in Progress]"
                }
              ]
            },
            {
              "name": "specificKeyIds",
              "type": "array",
              "label": "Specific Key IDs (required for 'specific' type)",
              "required": false,
              "placeholder": "0,1,2"
            },
            {
              "name": "searchPurposeMap",
              "type": "text",
              "label": "Search Purpose Map JSON (required for 'search' type)",
              "required": false,
              "placeholder": "{\"0\": {\"0\": \"current\"}, \"1\": {\"0\": \"all\"}}"
            },
            {
              "name": "limit",
              "type": "number",
              "label": "Limit",
              "required": false
            },
            {
              "name": "offset",
              "type": "number",
              "label": "Offset",
              "required": false
            }
          ]
        },
        "getIdentitiesContractKeys": {
          "label": "Get Identities Contract Keys",
          "description": "Get keys for multiple identities related to a specific contract",
          "inputs": [
            {
              "name": "identitiesIds",
              "type": "array",
              "label": "Identity IDs",
              "required": true
            },
            {
              "name": "contractId",
              "type": "text",
              "label": "Contract ID",
              "required": true
            },
            {
              "name": "purposes",
              "type": "multiselect",
              "label": "Key Purposes",
              "required": false,
              "options": [
                {
                  "value": "0",
                  "label": "Authentication"
                },
                {
                  "value": "1", 
                  "label": "Encryption"
                },
                {
                  "value": "2",
                  "label": "Decryption"
                },
                {
                  "value": "3",
                  "label": "Transfer"
                },
                {
                  "value": "5",
                  "label": "Voting"
                }
              ]
            }
          ]
        },
        "getIdentityNonce": {
          "label": "Get Identity Nonce",
          "description": "Get the current nonce for an identity",
          "inputs": [
            {
              "name": "identityId",
              "type": "text",
              "label": "Identity ID",
              "required": true
            }
          ]
        },
        "getIdentityContractNonce": {
          "label": "Get Identity Contract Nonce",
          "description": "Get the nonce for an identity in relation to a specific contract",
          "inputs": [
            {
              "name": "identityId",
              "type": "text",
              "label": "Identity ID",
              "required": true
            },
            {
              "name": "contractId",
              "type": "text",
              "label": "Contract ID",
              "required": true
            }
          ]
        },
        "getIdentityBalance": {
          "label": "Get Identity Balance",
          "description": "Get the credit balance of an identity",
          "inputs": [
            {
              "name": "id",
              "type": "text",
              "label": "Identity ID",
              "required": true
            }
          ]
        },
        "getIdentitiesBalances": {
          "label": "Get Identities Balances",
          "description": "Get balances for multiple identities",
          "inputs": [
            {
              "name": "ids",
              "type": "array",
              "label": "Identity IDs",
              "required": true
            }
          ]
        },
        "getIdentityBalanceAndRevision": {
          "label": "Get Identity Balance and Revision",
          "description": "Get both balance and revision number for an identity",
          "inputs": [
            {
              "name": "id",
              "type": "text",
              "label": "Identity ID",
              "required": true
            }
          ]
        },
        "getIdentityByPublicKeyHash": {
          "label": "Get Identity by Unique Public Key Hash",
          "description": "Find an identity by its unique public key hash",
          "inputs": [
            {
              "name": "publicKeyHash",
              "type": "text",
              "label": "Public Key Hash",
              "required": true,
              "placeholder": "b7e904ce25ed97594e72f7af0e66f298031c1754"
            }
          ]
        },
        "getIdentityByNonUniquePublicKeyHash": {
          "label": "Get Identity by Non-Unique Public Key Hash",
          "description": "Find identities by non-unique public key hash",
          "inputs": [
            {
              "name": "publicKeyHash",
              "type": "text",
              "label": "Public Key Hash",
              "required": true,
              "placeholder": "518038dc858461bcee90478fd994bba8057b7531"
            },
            {
              "name": "startAfter",
              "type": "text",
              "label": "Start After",
              "required": false
            }
          ]
        },
        "getIdentityTokenBalances": {
          "label": "Get Identity Token Balances",
          "description": "Get token balances for an identity",
          "inputs": [
            {
              "name": "identityId",
              "type": "text",
              "label": "Identity ID",
              "required": true
            },
            {
              "name": "tokenIds",
              "type": "array",
              "label": "Token IDs",
              "required": true
            }
          ]
        },
        "getIdentitiesTokenBalances": {
          "label": "Get Identities Token Balances",
          "description": "Get token balance for multiple identities",
          "inputs": [
            {
              "name": "identityIds",
              "type": "array",
              "label": "Identity IDs",
              "required": true
            },
            {
              "name": "tokenId",
              "type": "text",
              "label": "Token ID",
              "required": true,
              "placeholder": "Hqyu8WcRwXCTwbNxdga4CN5gsVEGc67wng4TFzceyLUv"
            }
          ]
        },
        "getIdentityTokenInfos": {
          "label": "Get Identity Token Info",
          "description": "Get token information for an identity's tokens",
          "inputs": [
            {
              "name": "identityId",
              "type": "text",
              "label": "Identity ID",
              "required": true
            },
            {
              "name": "tokenIds",
              "type": "array",
              "label": "Token IDs (optional)",
              "required": false,
              "placeholder": "[\"Hqyu8WcRwXCTwbNxdga4CN5gsVEGc67wng4TFzceyLUv\"]"
            },
            {
              "name": "limit",
              "type": "number",
              "label": "Limit",
              "required": false
            },
            {
              "name": "offset",
              "type": "number",
              "label": "Offset",
              "required": false
            }
          ]
        },
        "getIdentitiesTokenInfos": {
          "label": "Get Identities Token Info",
          "description": "Get token information for multiple identities with a specific token",
          "inputs": [
            {
              "name": "identityIds",
              "type": "array",
              "label": "Identity IDs",
              "required": true
            },
            {
              "name": "tokenId",
              "type": "text",
              "label": "Token ID",
              "required": true,
              "placeholder": "Hqyu8WcRwXCTwbNxdga4CN5gsVEGc67wng4TFzceyLUv"
            }
          ]
        }
      }
    },
    "dataContract": {
      "label": "Data Contract Queries",
      "queries": {
        "getDataContract": {
          "label": "Get Data Contract",
          "description": "Fetch a data contract by its identifier",
          "inputs": [
            {
              "name": "id",
              "type": "text",
              "label": "Data Contract ID",
              "required": true,
              "placeholder": "GWRSAVFMjXx8HpQFaNJMqBV7MBgMK4br5UESsB4S31Ec"
            }
          ]
        },
        "getDataContractHistory": {
          "label": "Get Data Contract History",
          "description": "Get the version history of a data contract",
          "inputs": [
            {
              "name": "id",
              "type": "text",
              "label": "Data Contract ID",
              "required": true,
              "placeholder": "HLY575cNazmc5824FxqaEMEBuzFeE4a98GDRNKbyJqCM"
            },
            {
              "name": "limit",
              "type": "number",
              "label": "Limit",
              "required": false
            },
            {
              "name": "offset",
              "type": "number",
              "label": "Offset",
              "required": false
            },
            {
              "name": "startAtMs",
              "type": "number",
              "label": "Start At Timestamp (ms)",
              "required": false
            }
          ]
        },
        "getDataContracts": {
          "label": "Get Data Contracts",
          "description": "Fetch multiple data contracts by their identifiers",
          "inputs": [
            {
              "name": "ids",
              "type": "array",
              "label": "Data Contract IDs",
              "required": true,
              "placeholder": "[\"GWRSAVFMjXx8HpQFaNJMqBV7MBgMK4br5UESsB4S31Ec\", \"ALybvzfcCwMs7sinDwmtumw17NneuW7RgFtFHgjKmF3A\"]"
            }
          ]
        }
      }
    },
    "document": {
      "label": "Document Queries",
      "queries": {
        "getDocuments": {
          "label": "Get Documents",
          "description": "Query documents from a data contract",
          "inputs": [
            {
              "name": "dataContractId",
              "type": "text",
              "label": "Data Contract ID",
              "required": true,
              "placeholder": "GWRSAVFMjXx8HpQFaNJMqBV7MBgMK4br5UESsB4S31Ec"
            },
            {
              "name": "documentType",
              "type": "text",
              "label": "Document Type",
              "required": true,
              "placeholder": "domain"
            },
            {
              "name": "where",
              "type": "json",
              "label": "Where Clause (JSON)",
              "required": false,
              "placeholder": "[[\"normalizedParentDomainName\", \"==\", \"dash\"], [\"normalizedLabel\", \"==\", \"therea1s11mshaddy5\"]]"
            },
            {
              "name": "orderBy",
              "type": "json",
              "label": "Order By (JSON)",
              "required": false,
              "placeholder": "[[\"$createdAt\", \"desc\"]]"
            },
            {
              "name": "limit",
              "type": "number",
              "label": "Limit",
              "required": false
            }
          ]
        },
        "getDocument": {
          "label": "Get Document",
          "description": "Fetch a specific document by ID",
          "inputs": [
            {
              "name": "dataContractId",
              "type": "text",
              "label": "Data Contract ID",
              "required": true,
              "placeholder": "GWRSAVFMjXx8HpQFaNJMqBV7MBgMK4br5UESsB4S31Ec"
            },
            {
              "name": "documentType",
              "type": "text",
              "label": "Document Type",
              "required": true,
              "placeholder": "domain"
            },
            {
              "name": "documentId",
              "type": "text",
              "label": "Document ID",
              "required": true,
              "placeholder": "7NYmEKQsYtniQRUmxwdPGeVcirMoPh5ZPyAKz8BWFy3r"
            }
          ]
        }
      }
    },
    "dpns": {
      "label": "DPNS Queries",
      "queries": {
        "getDpnsUsername": {
          "label": "Get DPNS Usernames",
          "description": "Get DPNS usernames for an identity",
          "inputs": [
            {
              "name": "identityId",
              "type": "text",
              "label": "Identity ID",
              "required": true
            }
          ]
        },
        "dpnsCheckAvailability": {
          "label": "DPNS Check Availability",
          "description": "Check if a DPNS username is available",
          "inputs": [
            {
              "name": "label",
              "type": "text",
              "label": "Label (Username)",
              "required": true
            }
          ]
        },
        "dpnsResolve": {
          "label": "DPNS Resolve Name",
          "description": "Resolve a DPNS name to an identity ID",
          "inputs": [
            {
              "name": "name",
              "type": "text",
              "label": "Name",
              "required": true
            }
          ]
        },
        "dpnsSearch": {
          "label": "DPNS Search Name",
          "description": "Search for DPNS names that start with a given prefix",
          "inputs": [
            {
              "name": "prefix",
              "type": "text",
              "label": "Name Prefix",
              "required": true,
              "placeholder": "Enter prefix (e.g., ali)"
            },
            {
              "name": "limit",
              "type": "number",
              "label": "Limit",
              "required": false,
              "placeholder": "Default: 10"
            }
          ]
        }
      }
    },
    "voting": {
      "label": "Voting & Contested Resources",
      "queries": {
        "getContestedResources": {
          "label": "Get Contested Resources",
          "description": "Get list of contested resources",
          "inputs": [
            {
              "name": "documentTypeName",
              "type": "text",
              "label": "Document Type",
              "required": true
            },
            {
              "name": "dataContractId",
              "type": "text",
              "label": "Data Contract ID",
              "required": true
            },
            {
              "name": "indexName",
              "type": "text",
              "label": "Index Name",
              "required": true
            },
            {
              "name": "startAtValue",
              "type": "text",
              "label": "Start At Value",
              "required": false
            },
            {
              "name": "limit",
              "type": "number",
              "label": "Limit",
              "required": false
            },
            {
              "name": "offset",
              "type": "number",
              "label": "Offset",
              "required": false
            },
            {
              "name": "orderAscending",
              "type": "checkbox",
              "label": "Order Ascending",
              "required": false
            }
          ]
        },
        "getContestedResourceVoteState": {
          "label": "Get Contested Resource Vote State",
          "description": "Get the current vote state for a contested resource",
          "inputs": [
            {
              "name": "dataContractId",
              "type": "text",
              "label": "Data Contract ID",
              "required": true
            },
            {
              "name": "documentTypeName",
              "type": "text",
              "label": "Document Type",
              "required": true
            },
            {
              "name": "indexName",
              "type": "text",
              "label": "Index Name",
              "required": true
            },
            {
              "name": "indexValues",
              "type": "array",
              "label": "Index Values",
              "required": true,
              "placeholder": "[\"dash\", \"alice\"]"
            },
            {
              "name": "resultType",
              "type": "text",
              "label": "Result Type",
              "required": true
            },
            {
              "name": "allowIncludeLockedAndAbstainingVoteTally",
              "type": "checkbox",
              "label": "Allow Include Locked and Abstaining Vote Tally",
              "required": false
            },
            {
              "name": "startAtIdentifierInfo",
              "type": "text",
              "label": "Start At Identifier Info",
              "required": false
            },
            {
              "name": "count",
              "type": "number",
              "label": "Count",
              "required": false
            },
            {
              "name": "orderAscending",
              "type": "checkbox",
              "label": "Order Ascending",
              "required": false
            }
          ]
        },
        "getContestedResourceVotersForIdentity": {
          "label": "Get Contested Resource Voters for Identity",
          "description": "Get voters who voted for a specific identity in a contested resource",
          "inputs": [
            {
              "name": "dataContractId",
              "type": "text",
              "label": "Contract ID",
              "required": true
            },
            {
              "name": "documentTypeName",
              "type": "text",
              "label": "Document Type",
              "required": true
            },
            {
              "name": "indexName",
              "type": "text",
              "label": "Index Name",
              "required": true
            },
            {
              "name": "indexValues",
              "type": "array",
              "label": "Index Values",
              "required": true,
              "placeholder": "[\"dash\", \"alice\"]"
            },
            {
              "name": "contestantId",
              "type": "text",
              "label": "Contestant Identity ID",
              "required": true
            },
            {
              "name": "startAtIdentifierInfo",
              "type": "text",
              "label": "Start At Identifier Info",
              "required": false
            },
            {
              "name": "count",
              "type": "number",
              "label": "Count",
              "required": false,
              "placeholder": "Default: 100"
            },
            {
              "name": "orderAscending",
              "type": "checkbox",
              "label": "Order Ascending",
              "required": false
            }
          ]
        },
        "getContestedResourceIdentityVotes": {
          "label": "Get Contested Resource Identity Votes",
          "description": "Get all votes cast by a specific identity",
          "inputs": [
            {
              "name": "identityId",
              "type": "text",
              "label": "Identity ID",
              "required": true
            },
            {
              "name": "limit",
              "type": "number",
              "label": "Limit",
              "required": false
            },
            {
              "name": "offset",
              "type": "number",
              "label": "Offset",
              "required": false
            },
            {
              "name": "orderAscending",
              "type": "checkbox",
              "label": "Order Ascending",
              "required": false
            }
          ]
        },
        "getVotePollsByEndDate": {
          "label": "Get Vote Polls by End Date",
          "description": "Get vote polls within a time range",
          "inputs": [
            {
              "name": "startTimeMs",
              "type": "number",
              "label": "Start Time (ms)",
              "required": false,
              "placeholder": "Timestamp in milliseconds as string (e.g., 1650000000000)"
            },
            {
              "name": "endTimeMs",
              "type": "number",
              "label": "End Time (ms)",
              "required": false,
              "placeholder": "Timestamp in milliseconds as string (e.g., 1650086400000)"
            },
            {
              "name": "limit",
              "type": "number",
              "label": "Limit",
              "required": false
            },
            {
              "name": "offset",
              "type": "number",
              "label": "Offset",
              "required": false
            },
            {
              "name": "orderAscending",
              "type": "checkbox",
              "label": "Order Ascending",
              "required": false
            }
          ]
        }
      }
    },
    "protocol": {
      "label": "Protocol & Version",
      "queries": {
        "getProtocolVersionUpgradeState": {
          "label": "Get Protocol Version Upgrade State",
          "description": "Get the current state of protocol version upgrades",
          "inputs": []
        },
        "getProtocolVersionUpgradeVoteStatus": {
          "label": "Get Protocol Version Upgrade Vote Status",
          "description": "Get voting status for protocol version upgrades",
          "inputs": [
            {
              "name": "startProTxHash",
              "type": "text",
              "label": "Start ProTx Hash",
              "required": true,
              "placeholder": "143dcd6a6b7684fde01e88a10e5d65de9a29244c5ecd586d14a342657025f113"
            },
            {
              "name": "count",
              "type": "number",
              "label": "Count",
              "required": true
            }
          ]
        }
      }
    },
    "epoch": {
      "label": "Epoch & Block",
      "queries": {
        "getEpochsInfo": {
          "label": "Get Epochs Info",
          "description": "Get information about epochs",
          "inputs": [
            {
              "name": "startEpoch",
              "type": "number",
              "label": "Start Epoch",
              "required": true
            },
            {
              "name": "count",
              "type": "number",
              "label": "Count",
              "required": true
            },
            {
              "name": "ascending",
              "type": "checkbox",
              "label": "Ascending Order",
              "required": false
            }
          ]
        },
        "getCurrentEpoch": {
          "label": "Get Current Epoch",
          "description": "Get information about the current epoch",
          "inputs": []
        },
        "getFinalizedEpochInfos": {
          "label": "Get Finalized Epoch Info",
          "description": "Get information about finalized epochs",
          "inputs": [
            {
              "name": "startEpoch",
              "type": "number",
              "label": "Start Epoch",
              "required": true
            },
            {
              "name": "count",
              "type": "number",
              "label": "Count",
              "required": true
            },
            {
              "name": "ascending",
              "type": "checkbox",
              "label": "Ascending Order",
              "required": false
            }
          ]
        },
        "getEvonodesProposedEpochBlocksByIds": {
          "label": "Get Evonodes Proposed Epoch Blocks by IDs",
          "description": "Get proposed blocks by evonode IDs",
          "supportsProof": false,
          "inputs": [
            {
              "name": "epoch",
              "type": "number",
              "label": "Epoch",
              "required": true
            },
            {
              "name": "ids",
              "type": "array",
              "label": "ProTx Hashes",
              "required": true,
              "placeholder": "[\"143dcd6a6b7684fde01e88a10e5d65de9a29244c5ecd586d14a342657025f113\"]"
            }
          ]
        },
        "getEvonodesProposedEpochBlocksByRange": {
          "label": "Get Evonodes Proposed Epoch Blocks by Range",
          "description": "Get proposed blocks by range",
          "supportsProof": false,
          "inputs": [
            {
              "name": "epoch",
              "type": "number",
              "label": "Epoch",
              "required": true
            },
            {
              "name": "limit",
              "type": "number",
              "label": "Limit",
              "required": false
            },
            {
              "name": "startAfter",
              "type": "text",
              "label": "Start After (Evonode ID)",
              "required": false,
              "placeholder": "143dcd6a6b7684fde01e88a10e5d65de9a29244c5ecd586d14a342657025f113"              
            },
            {
              "name": "orderAscending",
              "type": "checkbox",
              "label": "Order Ascending",
              "required": false
            }
          ]
        }
      }
    },
    "token": {
      "label": "Token Queries",
      "queries": {
        "getTokenStatuses": {
          "label": "Get Token Statuses",
          "description": "Get token statuses",
          "inputs": [
            {
              "name": "tokenIds",
              "type": "array",
              "label": "Token IDs",
              "required": true
            }
          ]
        },
        "getTokenDirectPurchasePrices": {
          "label": "Get Token Direct Purchase Prices",
          "description": "Get direct purchase prices for tokens",
          "inputs": [
            {
              "name": "tokenIds",
              "type": "array",
              "label": "Token IDs",
              "required": true
            }
          ]
        },
        "getTokenContractInfo": {
          "label": "Get Token Contract Info",
          "description": "Get information about a token contract",
          "inputs": [
            {
              "name": "dataContractId",
              "type": "text",
              "label": "Data Contract ID",
              "required": true,
              "placeholder": "EETVvWgohFDKtbB3ejEzBcDRMNYkc9TtgXY6y8hzP3Ta"
            }
          ]
        },
        "getTokenPerpetualDistributionLastClaim": {
          "label": "Get Token Perpetual Distribution Last Claim",
          "description": "Get last claim information for perpetual distribution",
          "inputs": [
            {
              "name": "identityId",
              "type": "text",
              "label": "Identity ID",
              "required": true
            },
            {
              "name": "tokenId",
              "type": "text",
              "label": "Token ID",
              "required": true
            }
          ]
        },
        "getTokenTotalSupply": {
          "label": "Get Token Total Supply",
          "description": "Get total supply of a token",
          "inputs": [
            {
              "name": "tokenId",
              "type": "text",
              "label": "Token ID",
              "required": true,
              "placeholder": "Hqyu8WcRwXCTwbNxdga4CN5gsVEGc67wng4TFzceyLUv"
            }
          ]
        }
      }
    },
    "group": {
      "label": "Group Queries",
      "queries": {
        "getGroupInfo": {
          "label": "Get Group Info",
          "description": "Get information about a group",
          "inputs": [
            {
              "name": "contractId",
              "type": "text",
              "label": "Contract ID",
              "required": true
            },
            {
              "name": "groupContractPosition",
              "type": "number",
              "label": "Group Contract Position",
              "required": true
            }
          ]
        },
        "getGroupInfos": {
          "label": "Get Group Infos",
          "description": "Get information about multiple groups",
          "inputs": [
            {
              "name": "contractId",
              "type": "text",
              "label": "Contract ID",
              "required": true
            },
            {
              "name": "startAtGroupContractPosition",
              "type": "number",
              "label": "Start at Position",
              "required": false
            },
            {
              "name": "startGroupContractPositionIncluded",
              "type": "checkbox",
              "label": "Include Start Position",
              "required": false
            },
            {
              "name": "count",
              "type": "number",
              "label": "Count",
              "required": false
            }
          ]
        },
        "getGroupActions": {
          "label": "Get Group Actions",
          "description": "Get actions for a group",
          "inputs": [
            {
              "name": "contractId",
              "type": "text",
              "label": "Contract ID",
              "required": true
            },
            {
              "name": "groupContractPosition",
              "type": "number",
              "label": "Group Contract Position",
              "required": true
            },
            {
              "name": "status",
              "type": "select",
              "label": "Status",
              "required": true,
              "options": [
                {
                  "value": "ACTIVE",
                  "label": "Active"
                },
                {
                  "value": "CLOSED",
                  "label": "Closed"
                }
              ]
            },
            {
              "name": "startActionId",
              "type": "text",
              "label": "Start Action ID",
              "required": false
            },
            {
              "name": "startActionIdIncluded",
              "type": "checkbox",
              "label": "Include Start Action",
              "required": false
            },
            {
              "name": "count",
              "type": "number",
              "label": "Count",
              "required": false
            }
          ]
        },
        "getGroupActionSigners": {
          "label": "Get Group Action Signers",
          "description": "Get signers for a group action",
          "inputs": [
            {
              "name": "contractId",
              "type": "text",
              "label": "Contract ID",
              "required": true
            },
            {
              "name": "groupContractPosition",
              "type": "number",
              "label": "Group Contract Position",
              "required": true
            },
            {
              "name": "status",
              "type": "select",
              "label": "Status",
              "required": true,
              "options": [
                {
                  "value": "ACTIVE",
                  "label": "Active"
                },
                {
                  "value": "CLOSED",
                  "label": "Closed"
                }
              ]
            },
            {
              "name": "actionId",
              "type": "text",
              "label": "Action ID",
              "required": true
            }
          ]
        }
      }
    },
    "system": {
      "label": "System & Utility",
      "queries": {
        "getStatus": {
          "label": "Get Status",
          "description": "Get system status",
          "supportsProof": false,
          "inputs": []
        },
        "getCurrentQuorumsInfo": {
          "label": "Get Current Quorums Info",
          "description": "Get information about current quorums",
          "supportsProof": false,
          "inputs": []
        },
        "getPrefundedSpecializedBalance": {
          "label": "Get Prefunded Specialized Balance",
          "description": "Get prefunded specialized balance",
          "inputs": [
            {
              "name": "identityId",
              "type": "text",
              "label": "Specialized Balance ID",
              "required": true,
              "placeholder": "AzaU7zqCT7X1kxh8yWxkT9PxAgNqWDu4Gz13emwcRyAT"
            }
          ]
        },
        "getTotalCreditsInPlatform": {
          "label": "Get Total Credits in Platform",
          "description": "Get total credits in the platform",
          "inputs": []
        },
        "getPathElements": {
          "label": "Get Path Elements",
          "description": "Access any data in the Dash Platform state tree. This low-level query allows direct access to GroveDB storage by specifying a path through the tree structure and keys to retrieve at that path. Common paths include: Identities (32), Tokens (96), DataContractDocuments (64), Balances (16), Votes (80), and more.",
          "inputs": [
            {
              "name": "path",
              "type": "array",
              "label": "Path",
              "required": true
            },
            {
              "name": "keys",
              "type": "array",
              "label": "Keys",
              "required": true
            }
          ]
        },
        "waitForStateTransitionResult": {
          "label": "Wait for State Transition Result",
          "description": "Internal query to wait for and retrieve the result of a previously submitted state transition",
          "supportsProof": false,
          "inputs": [
            {
              "name": "stateTransitionHash",
              "type": "text",
              "label": "State Transition Hash",
              "required": true
            }
          ]
        }
      }
    }
  },
  "transitions": {
    "identity": {
      "label": "Identity Transitions",
      "transitions": {
        "identityCreate": {
          "label": "Identity Create",
          "description": "Create a new identity with initial credits",
          "inputs": [
            {
              "name": "seedPhrase",
              "type": "textarea",
              "label": "Seed Phrase",
              "required": true,
              "placeholder": "Enter seed phrase (12-24 words) or click Generate",
              "help": "The wallet seed phrase that will be used to derive identity keys"
            },
            {
              "name": "generateSeedButton",
              "type": "button",
              "label": "Generate New Seed",
              "action": "generateTestSeed"
            },
            {
              "name": "identityIndex",
              "type": "number",
              "label": "Identity Index",
              "required": true,
              "value": 0,
              "min": 0,
              "max": 999,
              "help": "The identity index is an internal reference within the wallet. Leave as 0 for first identity."
            },
            {
              "name": "keySelectionMode",
              "type": "select",
              "label": "Key Selection Mode",
              "required": true,
              "value": "default",
              "options": [
                {
                  "value": "default",
                  "label": "Default (Recommended)"
                },
                {
                  "value": "advanced",
                  "label": "Advanced"
                }
              ],
              "help": "Default adds standard keys for most Platform operations. Advanced allows custom key configuration."
            },
            {
              "name": "keyType",
              "type": "select",
              "label": "Key Type",
              "required": true,
              "value": "ECDSA_HASH160",
              "options": [
                {
                  "value": "ECDSA_HASH160",
                  "label": "ECDSA_HASH160 (Dash Evo Tool default)"
                },
                {
                  "value": "ECDSA_SECP256K1",
                  "label": "ECDSA_SECP256K1 (Dash mobile wallet default)"
                }
              ],
              "help": "Choose key type"
            },
            {
              "name": "keyPreview",
              "type": "keyPreview",
              "label": "Keys to be added",
              "help": "These keys will be added to your new identity"
            }
          ],
          "sdk_params": [
            {
              "name": "assetLockProof",
              "type": "string",
              "label": "Asset Lock Proof",
              "required": true,
              "description": "Hex-encoded JSON asset lock proof"
            },
            {
              "name": "assetLockProofPrivateKey",
              "type": "string",
              "label": "Asset Lock Proof Private Key",
              "required": true,
              "description": "WIF format private key"
            },
            {
              "name": "publicKeys",
              "type": "string",
              "label": "Public Keys",
              "required": true,
              "description": "JSON array of public keys. Key requirements: ECDSA_SECP256K1 requires privateKeyHex or privateKeyWif for signing, BLS12_381 requires privateKeyHex for signing, ECDSA_HASH160 requires either the data field (base64-encoded 20-byte public key hash) or privateKeyHex (produces empty signatures)."
            }
          ],
          "sdk_example": "// Asset lock proof is a hex-encoded JSON object\nconst assetLockProof = \"a9147d3b... (hex-encoded)\";\nconst assetLockProofPrivateKey = \"XFfpaSbZq52HPy3WWwe1dXsZMiU1bQn8vQd34HNXkSZThevBWRn1\"; // WIF format\n\n// Public keys array with proper key types and private keys for signing/hashing\nconst publicKeys = JSON.stringify([\n  {\n    id: 0,\n    keyType: \"ECDSA_SECP256K1\",\n    purpose: \"AUTHENTICATION\",\n    securityLevel: \"MASTER\",\n    data: \"A5GzYHPIolbHkFrp5l+s9IvF2lWMuuuSu3oWZB8vWHNJ\", // Base64-encoded public key\n    readOnly: false,\n    privateKeyWif: \"XBrZJKcW4ajWVNAU6yP87WQog6CjFnpbqyAKgNTZRqmhYvPgMNV2\"\n  },\n  {\n    id: 1,\n    keyType: \"ECDSA_HASH160\",\n    purpose: \"AUTHENTICATION\",\n    securityLevel: \"HIGH\",\n    data: \"ripemd160hash20bytes1234\", // Base64-encoded 20-byte RIPEMD160 hash\n    readOnly: false,\n    // ECDSA_HASH160 keys produce empty signatures (not required/used for signing)\n  }\n]);\n\nconst result = await sdk.identityCreate(assetLockProof, assetLockProofPrivateKey, publicKeys);"
        },
        "identityTopUp": {
          "label": "Identity Top Up",
          "description": "Add credits to an existing identity",
          "inputs": [
            {
              "name": "identityId",
              "type": "text",
              "label": "Identity ID",
              "required": true,
              "placeholder": "Enter the identity ID to top up (base58)",
              "help": "The identity ID that will receive the credits from the asset lock proof"
            }
          ],
          "sdk_params": [
            {
              "name": "identityId",
              "type": "string",
              "label": "Identity ID",
              "required": true,
              "description": "Base58 format identity ID"
            },
            {
              "name": "assetLockProof",
              "type": "string",
              "label": "Asset Lock Proof",
              "required": true,
              "description": "Hex-encoded JSON asset lock proof"
            },
            {
              "name": "assetLockProofPrivateKey",
              "type": "string",
              "label": "Asset Lock Proof Private Key",
              "required": true,
              "description": "WIF format private key"
            }
          ],
          "sdk_example": "const identityId = \"5DbLwAxGBzUzo81VewMUwn4b5P4bpv9FNFybi25XB5Bk\"; // base58\nconst assetLockProof = \"a9147d3b... (hex-encoded)\";\nconst assetLockProofPrivateKey = \"XFfpaSbZq52HPy3WWve1dXsZMiU1bQn8vQd34HNXkSZThevBWRn1\"; // WIF format\n\nconst result = await sdk.identityTopUp(identityId, assetLockProof, assetLockProofPrivateKey);"
        },
        "identityUpdate": {
          "label": "Identity Update",
          "description": "Update identity keys (add or disable)",
          "inputs": [
            {
              "name": "addPublicKeys",
              "type": "textarea",
              "label": "Keys to Add (JSON array)",
              "required": false,
              "placeholder": "[{\"keyType\":\"ECDSA_HASH160\",\"purpose\":\"AUTHENTICATION\",\"data\":\"base64_key_data\"}]"
            },
            {
              "name": "disablePublicKeys",
              "type": "text",
              "label": "Key IDs to Disable (comma-separated)",
              "required": false,
              "placeholder": "2,3,5"
            }
          ]
        },
        "identityCreditTransfer": {
          "label": "Identity Credit Transfer",
          "description": "Transfer credits between identities",
          "inputs": [
            {
              "name": "recipientId",
              "type": "text",
              "label": "Recipient Identity ID",
              "required": true
            },
            {
              "name": "amount",
              "type": "number",
              "label": "Amount (credits)",
              "required": true
            }
          ]
        },
        "identityCreditWithdrawal": {
          "label": "Identity Credit Withdrawal",
          "description": "Withdraw credits from identity to Dash address",
          "inputs": [
            {
              "name": "toAddress",
              "type": "text",
              "label": "Dash Address",
              "required": true
            },
            {
              "name": "amount",
              "type": "number",
              "label": "Amount (credits)",
              "required": true
            },
            {
              "name": "coreFeePerByte",
              "type": "number",
              "label": "Core Fee Per Byte (optional)",
              "required": false
            }
          ]
        }
      }
    },
    "dataContract": {
      "label": "Data Contract Transitions",
      "transitions": {
        "dataContractCreate": {
          "label": "Data Contract Create",
          "description": "Create a new data contract",
          "inputs": [
            {
              "name": "canBeDeleted",
              "type": "checkbox",
              "label": "Can Be Deleted",
              "required": false
            },
            {
              "name": "readonly",
              "type": "checkbox",
              "label": "Read Only",
              "required": false
            },
            {
              "name": "keepsHistory",
              "type": "checkbox",
              "label": "Keeps History",
              "required": false
            },
            {
              "name": "documentsKeepHistoryContractDefault",
              "type": "checkbox",
              "label": "Documents Keep History (Default)",
              "required": false
            },
            {
              "name": "documentsMutableContractDefault",
              "type": "checkbox",
              "label": "Documents Mutable (Default)",
              "required": false,
              "defaultValue": true
            },
            {
              "name": "documentsCanBeDeletedContractDefault",
              "type": "checkbox",
              "label": "Documents Can Be Deleted (Default)",
              "required": false,
              "defaultValue": true
            },
            {
              "name": "requiresIdentityEncryptionBoundedKey",
              "type": "text",
              "label": "Requires Identity Encryption Key (optional)",
              "required": false
            },
            {
              "name": "requiresIdentityDecryptionBoundedKey",
              "type": "text",
              "label": "Requires Identity Decryption Key (optional)",
              "required": false
            },
            {
              "name": "documentSchemas",
              "type": "json",
              "label": "Document Schemas JSON",
              "required": true,
              "placeholder": "{\n  \"note\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"message\": {\n        \"type\": \"string\",\n        \"maxLength\": 100,\n        \"position\": 0\n      }\n    },\n    \"required\": [\"message\"],\n    \"additionalProperties\": false\n  }\n}"
            },
            {
              "name": "groups",
              "type": "json",
              "label": "Groups (optional)",
              "required": false,
              "placeholder": "{}"
            },
            {
              "name": "tokens",
              "type": "json",
              "label": "Tokens (optional)",
              "required": false,
              "placeholder": "{}"
            },
            {
              "name": "keywords",
              "type": "text",
              "label": "Keywords (comma separated, optional)",
              "required": false
            },
            {
              "name": "description",
              "type": "text",
              "label": "Description (optional)",
              "required": false
            }
          ]
        },
        "dataContractUpdate": {
          "label": "Data Contract Update",
          "description": "Add document types, groups, or tokens to an existing data contract",
          "inputs": [
            {
              "name": "dataContractId",
              "type": "text",
              "label": "Data Contract ID",
              "required": true
            },
            {
              "name": "newDocumentSchemas",
              "type": "json",
              "label": "New Document Schemas to Add (optional)",
              "required": false,
              "placeholder": "{\n  \"newType\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"field\": {\n        \"type\": \"string\",\n        \"maxLength\": 100,\n        \"position\": 0\n      }\n    },\n    \"required\": [\"field\"],\n    \"additionalProperties\": false\n  }\n}"
            },
            {
              "name": "newGroups",
              "type": "json",
              "label": "New Groups to Add (optional)",
              "required": false,
              "placeholder": "{}"
            },
            {
              "name": "newTokens",
              "type": "json",
              "label": "New Tokens to Add (optional)",
              "required": false,
              "placeholder": "{}"
            }
          ]
        }
      }
    },
    "document": {
      "label": "Document Transitions",
      "transitions": {
        "documentCreate": {
          "label": "Document Create",
          "description": "Create a new document",
          "inputs": [
            {
              "name": "contractId",
              "type": "text",
              "label": "Data Contract ID",
              "required": true
            },
            {
              "name": "documentType",
              "type": "text",
              "label": "Document Type",
              "required": true
            },
            {
              "name": "fetchSchema",
              "type": "button",
              "label": "Fetch Schema",
              "action": "fetchDocumentSchema"
            },
            {
              "name": "documentFields",
              "type": "dynamic",
              "label": "Document Fields"
            }
          ]
        },
        "documentReplace": {
          "label": "Document Replace",
          "description": "Replace an existing document",
          "inputs": [
            {
              "name": "contractId",
              "type": "text",
              "label": "Data Contract ID",
              "required": true
            },
            {
              "name": "documentType",
              "type": "text",
              "label": "Document Type",
              "required": true
            },
            {
              "name": "documentId",
              "type": "text",
              "label": "Document ID",
              "required": true
            },
            {
              "name": "loadDocument",
              "type": "button",
              "label": "Load Document",
              "action": "loadExistingDocument"
            },
            {
              "name": "documentFields",
              "type": "dynamic",
              "label": "Document Fields"
            }
          ]
        },
        "documentDelete": {
          "label": "Document Delete",
          "description": "Delete an existing document",
          "inputs": [
            {
              "name": "contractId",
              "type": "text",
              "label": "Data Contract ID",
              "required": true
            },
            {
              "name": "documentType",
              "type": "text",
              "label": "Document Type",
              "required": true
            },
            {
              "name": "documentId",
              "type": "text",
              "label": "Document ID",
              "required": true
            }
          ]
        },
        "documentTransfer": {
          "label": "Document Transfer",
          "description": "Transfer document ownership",
          "inputs": [
            {
              "name": "contractId",
              "type": "text",
              "label": "Data Contract ID",
              "required": true
            },
            {
              "name": "documentType",
              "type": "text",
              "label": "Document Type",
              "required": true
            },
            {
              "name": "documentId",
              "type": "text",
              "label": "Document ID",
              "required": true
            },
            {
              "name": "recipientId",
              "type": "text",
              "label": "Recipient Identity ID",
              "required": true
            }
          ]
        },
        "documentPurchase": {
          "label": "Document Purchase",
          "description": "Purchase a document",
          "inputs": [
            {
              "name": "contractId",
              "type": "text",
              "label": "Data Contract ID",
              "required": true
            },
            {
              "name": "documentType",
              "type": "text",
              "label": "Document Type",
              "required": true
            },
            {
              "name": "documentId",
              "type": "text",
              "label": "Document ID",
              "required": true
            },
            {
              "name": "price",
              "type": "number",
              "label": "Price (credits)",
              "required": true
            }
          ]
        },
        "documentSetPrice": {
          "label": "Document Set Price",
          "description": "Set or update document price",
          "inputs": [
            {
              "name": "contractId",
              "type": "text",
              "label": "Data Contract ID",
              "required": true
            },
            {
              "name": "documentType",
              "type": "text",
              "label": "Document Type",
              "required": true
            },
            {
              "name": "documentId",
              "type": "text",
              "label": "Document ID",
              "required": true
            },
            {
              "name": "price",
              "type": "number",
              "label": "Price (credits, 0 to remove)",
              "required": true
            }
          ]
        },
        "dpnsRegister": {
          "label": "DPNS Register Name",
          "description": "Register a new DPNS username",
          "inputs": [
            {
              "name": "label",
              "type": "text",
              "label": "Username",
              "required": true,
              "placeholder": "Enter username (e.g., alice)",
              "validateOnType": true
            }
          ]
        }
      }
    },
    "token": {
      "label": "Token Transitions",
      "transitions": {
        "tokenBurn": {
          "label": "Token Burn",
          "description": "Burn tokens",
          "inputs": [
            {
              "name": "contractId",
              "type": "text",
              "label": "Data Contract ID",
              "required": true
            },
            {
              "name": "tokenPosition",
              "type": "number",
              "label": "Token Contract Position",
              "required": true
            },
            {
              "name": "amount",
              "type": "text",
              "label": "Amount to Burn",
              "required": true
            },
            {
              "name": "publicNote",
              "type": "text",
              "label": "Public Note",
              "required": false
            }
          ]
        },
        "tokenMint": {
          "label": "Token Mint",
          "description": "Mint new tokens",
          "inputs": [
            {
              "name": "contractId",
              "type": "text",
              "label": "Data Contract ID",
              "required": true
            },
            {
              "name": "tokenPosition",
              "type": "number",
              "label": "Token Contract Position",
              "required": true
            },
            {
              "name": "amount",
              "type": "text",
              "label": "Amount to Mint",
              "required": true
            },
            {
              "name": "issuedToIdentityId",
              "type": "text",
              "label": "Issue To Identity ID",
              "required": false
            },
            {
              "name": "publicNote",
              "type": "text",
              "label": "Public Note",
              "required": false
            }
          ]
        },
        "tokenClaim": {
          "label": "Token Claim",
          "description": "Claim tokens from a distribution",
          "inputs": [
            {
              "name": "contractId",
              "type": "text",
              "label": "Data Contract ID",
              "required": true
            },
            {
              "name": "tokenPosition",
              "type": "number",
              "label": "Token Contract Position",
              "required": true
            },
            {
              "name": "distributionType",
              "type": "select",
              "label": "Distribution Type",
              "required": true,
              "options": [
                {
                  "value": "perpetual",
                  "label": "Perpetual"
                },
                {
                  "value": "preprogrammed",
                  "label": "Pre-programmed"
                }
              ]
            },
            {
              "name": "publicNote",
              "type": "text",
              "label": "Public Note",
              "required": false
            }
          ]
        },
        "tokenSetPriceForDirectPurchase": {
          "label": "Token Set Price",
          "description": "Set or update the price for direct token purchases",
          "inputs": [
            {
              "name": "contractId",
              "type": "text",
              "label": "Data Contract ID",
              "required": true
            },
            {
              "name": "tokenPosition",
              "type": "number",
              "label": "Token Contract Position",
              "required": true
            },
            {
              "name": "priceType",
              "type": "select",
              "label": "Price Type",
              "required": true,
              "options": [
                {
                  "value": "single",
                  "label": "Single Price"
                },
                {
                  "value": "tiered",
                  "label": "Tiered Pricing"
                }
              ]
            },
            {
              "name": "priceData",
              "type": "text",
              "label": "Price Data (single price or JSON map)",
              "required": false,
              "placeholder": "Leave empty to remove pricing"
            },
            {
              "name": "publicNote",
              "type": "text",
              "label": "Public Note",
              "required": false
            }
          ]
        },
        "tokenDirectPurchase": {
          "label": "Token Direct Purchase",
          "description": "Purchase tokens directly at the configured price",
          "inputs": [
            {
              "name": "contractId",
              "type": "text",
              "label": "Data Contract ID",
              "required": true
            },
            {
              "name": "tokenPosition",
              "type": "number",
              "label": "Token Contract Position",
              "required": true
            },
            {
              "name": "amount",
              "type": "text",
              "label": "Amount to Purchase",
              "required": true
            },
            {
              "name": "totalAgreedPrice",
              "type": "text",
              "label": "Total Agreed Price (in credits) - Optional, fetches from pricing schedule if not provided",
              "required": false
            }
          ]
        },
        "tokenConfigUpdate": {
          "label": "Token Config Update",
          "description": "Update token configuration settings",
          "inputs": [
            {
              "name": "contractId",
              "type": "text",
              "label": "Data Contract ID",
              "required": true
            },
            {
              "name": "tokenPosition",
              "type": "number",
              "label": "Token Contract Position",
              "required": true
            },
            {
              "name": "configItemType",
              "type": "select",
              "label": "Config Item Type",
              "required": true,
              "options": [
                {
                  "value": "conventions",
                  "label": "Conventions"
                },
                {
                  "value": "max_supply",
                  "label": "Max Supply"
                },
                {
                  "value": "perpetual_distribution",
                  "label": "Perpetual Distribution"
                },
                {
                  "value": "new_tokens_destination_identity",
                  "label": "New Tokens Destination Identity"
                },
                {
                  "value": "minting_allow_choosing_destination",
                  "label": "Minting Allow Choosing Destination"
                },
                {
                  "value": "manual_minting",
                  "label": "Manual Minting"
                },
                {
                  "value": "manual_burning",
                  "label": "Manual Burning"
                },
                {
                  "value": "conventions_control_group",
                  "label": "Conventions Control Group"
                },
                {
                  "value": "conventions_admin_group",
                  "label": "Conventions Admin Group"
                },
                {
                  "value": "max_supply_control_group",
                  "label": "Max Supply Control Group"
                },
                {
                  "value": "max_supply_admin_group",
                  "label": "Max Supply Admin Group"
                }
              ]
            },
            {
              "name": "configValue",
              "type": "text",
              "label": "Config Value (JSON or specific value)",
              "required": true
            },
            {
              "name": "publicNote",
              "type": "text",
              "label": "Public Note",
              "required": false
            }
          ]
        },
        "tokenTransfer": {
          "label": "Token Transfer",
          "description": "Transfer tokens between identities",
          "inputs": [
            {
              "name": "contractId",
              "type": "text",
              "label": "Data Contract ID",
              "required": true
            },
            {
              "name": "tokenPosition",
              "type": "number",
              "label": "Token Contract Position",
              "required": true
            },
            {
              "name": "amount",
              "type": "text",
              "label": "Amount to Transfer",
              "required": true
            },
            {
              "name": "recipientId",
              "type": "text",
              "label": "Recipient Identity ID",
              "required": true
            },
            {
              "name": "publicNote",
              "type": "text",
              "label": "Public Note",
              "required": false
            }
          ]
        },
        "tokenFreeze": {
          "label": "Token Freeze",
          "description": "Freeze tokens for a specific identity",
          "inputs": [
            {
              "name": "contractId",
              "type": "text",
              "label": "Data Contract ID",
              "required": true
            },
            {
              "name": "tokenPosition",
              "type": "number",
              "label": "Token Contract Position",
              "required": true
            },
            {
              "name": "identityToFreeze",
              "type": "text",
              "label": "Identity ID to Freeze",
              "required": true
            },
            {
              "name": "publicNote",
              "type": "text",
              "label": "Public Note",
              "required": false
            }
          ]
        },
        "tokenUnfreeze": {
          "label": "Token Unfreeze",
          "description": "Unfreeze tokens for a specific identity",
          "inputs": [
            {
              "name": "contractId",
              "type": "text",
              "label": "Data Contract ID",
              "required": true
            },
            {
              "name": "tokenPosition",
              "type": "number",
              "label": "Token Contract Position",
              "required": true
            },
            {
              "name": "identityToUnfreeze",
              "type": "text",
              "label": "Identity ID to Unfreeze",
              "required": true
            },
            {
              "name": "publicNote",
              "type": "text",
              "label": "Public Note",
              "required": false
            }
          ]
        },
        "tokenDestroyFrozen": {
          "label": "Token Destroy Frozen",
          "description": "Destroy frozen tokens",
          "inputs": [
            {
              "name": "contractId",
              "type": "text",
              "label": "Data Contract ID",
              "required": true
            },
            {
              "name": "tokenPosition",
              "type": "number",
              "label": "Token Contract Position",
              "required": true
            },
            {
              "name": "frozenIdentityId",
              "type": "text",
              "label": "Identity ID whose frozen tokens to destroy",
              "required": true
            },
            {
              "name": "publicNote",
              "type": "text",
              "label": "Public Note",
              "required": false
            }
          ]
        }
      }
    },
    "voting": {
      "label": "Voting Transitions",
      "transitions": {
        "dpnsUsername": {
          "label": "DPNS Username",
          "description": "Cast a vote for a contested DPNS username",
          "inputs": [
            {
              "name": "contestedUsername",
              "type": "text",
              "label": "Contested Username",
              "required": true,
              "placeholder": "Enter the contested username (e.g., 'myusername')"
            },
            {
              "name": "voteChoice",
              "type": "select",
              "label": "Vote Choice",
              "required": true,
              "options": [
                {
                  "value": "abstain",
                  "label": "Abstain"
                },
                {
                  "value": "lock",
                  "label": "Lock (Give to no one)"
                },
                {
                  "value": "towardsIdentity",
                  "label": "Vote for Identity"
                }
              ]
            },
            {
              "name": "targetIdentity",
              "type": "text",
              "label": "Target Identity ID (if voting for identity)",
              "required": false,
              "placeholder": "Identity ID to vote for",
              "dependsOn": {
                "field": "voteChoice",
                "value": "towardsIdentity"
              }
            }
          ]
        },
        "masternodeVote": {
          "label": "Contested Resource",
          "description": "Cast a vote for contested resources as a masternode",
          "inputs": [
            {
              "name": "contractId",
              "type": "text",
              "label": "Data Contract ID",
              "required": true,
              "placeholder": "Contract ID containing the contested resource"
            },
            {
              "name": "fetchContestedResources",
              "type": "button",
              "label": "Get Contested Resources",
              "action": "fetchContestedResources"
            },
            {
              "name": "contestedResourceDropdown",
              "type": "dynamic",
              "label": "Contested Resources"
            },
            {
              "name": "voteChoice",
              "type": "select",
              "label": "Vote Choice",
              "required": true,
              "options": [
                {
                  "value": "abstain",
                  "label": "Abstain"
                },
                {
                  "value": "lock",
                  "label": "Lock (Give to no one)"
                },
                {
                  "value": "towardsIdentity",
                  "label": "Vote for Identity"
                }
              ]
            },
            {
              "name": "targetIdentity",
              "type": "text",
              "label": "Target Identity ID (if voting for identity)",
              "required": false,
              "placeholder": "Identity ID to vote for",
              "dependsOn": {
                "field": "voteChoice",
                "value": "towardsIdentity"
              }
            }
          ]
        }
      }
    }
  }
}