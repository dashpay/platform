# Cargo deny configuration for security and license checking

[licenses]
# List of explicitly allowed licenses
allow = [
    "MIT",
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "BSD-2-Clause",
    "BSD-3-Clause",
    "ISC",
    "Unicode-DFS-2016",
]

# List of explicitly disallowed licenses
deny = [
    "GPL-2.0",
    "GPL-3.0",
    "AGPL-3.0",
    "LGPL-2.0",
    "LGPL-2.1",
    "LGPL-3.0",
]

copyleft = "deny"
allow-osi-fsf-free = "neither"
confidence-threshold = 0.8

[[licenses.exceptions]]
allow = ["OpenSSL"]
name = "ring"

[bans]
# Lint level for when multiple versions of the same dependency are detected
multiple-versions = "warn"
wildcards = "allow"
highlight = "all"

# List of explicitly disallowed crates
deny = [
    # Old, unmaintained crates
    { name = "openssl" },
    { name = "pcre" },
    
    # Crates with known issues
    { name = "stdweb" }, # Use web-sys instead
]

# Skip certain crates when checking for duplicates
skip = [
    { name = "winapi" },
]

# Similarly named crates that are allowed to coexist
allow = [
    { name = "num_cpus", version = "*" },
]

[advisories]
# The path where the advisory database is cloned/fetched into
db-path = "~/.cargo/advisory-db"
# The url(s) of the advisory databases to use
db-urls = ["https://github.com/rustsec/advisory-db"]
# The lint level for security vulnerabilities
vulnerability = "deny"
# The lint level for unmaintained crates
unmaintained = "warn"
# The lint level for crates with security notices
notice = "warn"
# A list of advisory IDs to ignore
ignore = [
    #"RUSTSEC-0000-0000",
]

[sources]
# Lint level for what to happen when a crate from a crate registry that is not in the allow list is encountered
unknown-registry = "warn"
# Lint level for what to happen when a crate from a git repository that is not in the allow list is encountered
unknown-git = "warn"
# List of allowed crate registries
allow-registry = ["https://github.com/rust-lang/crates.io-index"]
# List of allowed Git repositories
allow-git = [
    "https://github.com/dashpay/rust-dashcore",
    "https://github.com/dashpay/platform",
]