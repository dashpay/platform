# WASM SDK Funded Test Environment Configuration
# Copy this file to .env and configure with your testnet faucet details

# CRITICAL SAFETY: Only testnet/devnet allowed for funded tests
NETWORK=testnet

# Enable funded testing (required safety flag)
ENABLE_FUNDED_TESTS=true

# Faucet Configuration (Primary)
# Get these from your testnet faucet wallet
FAUCET_1_ADDRESS=your-testnet-faucet-address
FAUCET_1_PRIVATE_KEY=your-testnet-faucet-private-key

# Backup Faucet (For parallel testing)
FAUCET_2_ADDRESS=your-backup-faucet-address
FAUCET_2_PRIVATE_KEY=your-backup-faucet-private-key

# Safety Limits (satoshis)
MAX_CREDITS_PER_TEST=50000000      # 50M credits (~0.5 DASH)
MAX_CREDITS_PER_SUITE=500000000    # 500M credits (~5 DASH)
MAX_DAILY_USAGE=2000000000         # 2B credits (~20 DASH)

# Identity Pool Configuration
IDENTITY_POOL_SIZE=25              # Number of pre-funded identities
MIN_IDENTITY_BALANCE=10000000      # 10M credits minimum per identity
REFUND_THRESHOLD=5000000           # Refund when below 5M credits
INITIAL_IDENTITY_CREDITS=50000000  # 50M credits initial funding

# Performance Optimization
SKIP_SYNC_BEFORE_HEIGHT=1800000    # Skip wallet sync before this height
FAUCET_WALLET_USE_STORAGE=true     # Cache wallet state for faster startup
FAUCET_WALLET_STORAGE_DIR=./funded/storage

# Test Execution Control
TEST_MODE=funded                    # funded | mock | hybrid
FUNDING_TIER=medium                 # low | medium | high
ENABLE_FUND_RECOVERY=true          # Automatic fund cleanup
PARALLEL_FUNDED_WORKERS=3          # Max parallel workers for funded tests

# Monitoring and Logging
ENABLE_CREDIT_TRACKING=true        # Track all credit usage
ENABLE_USAGE_ALERTS=true           # Alert on unusual usage patterns
EXPORT_USAGE_REPORTS=true          # Generate detailed usage reports

# CI/CD Configuration (when running in CI)
ALLOW_FUNDED_CI=false              # Must be explicitly enabled for CI
CI_DAILY_BUDGET=1000000000         # 1B credits (10 DASH) for CI tests
CI_MAX_PARALLEL_JOBS=2             # Limit CI parallelism for funded tests

# Emergency Controls
EMERGENCY_STOP_ON_ERROR=true       # Stop all tests on first funding error
MAX_CONSECUTIVE_FAILURES=3         # Emergency stop after N consecutive failures
AUTO_CLEANUP_ON_SHUTDOWN=true      # Automatically cleanup resources on exit

# Optional: Pre-configured Test Identities (if available)
# These identities should already exist and be funded
# TEST_IDENTITY_1_ID=existing-funded-identity-id
# TEST_IDENTITY_1_PRIVATE_KEY=private-key-for-identity-1
# TEST_IDENTITY_2_ID=another-existing-identity
# TEST_IDENTITY_2_PRIVATE_KEY=private-key-for-identity-2

# Dash Platform Connection (inherit from main config or override)
# DAPI_SEED=seed1.testnet.networks.dash.org:1443
# PLATFORM_PORT=443
# CONNECTION_TIMEOUT=30000

# Development Settings
DEBUG_FUNDED_TESTS=false           # Enable verbose logging
LOG_ALL_TRANSACTIONS=false         # Log every transaction (verbose)
SIMULATE_NETWORK_DELAYS=false      # Add artificial delays for testing
DRY_RUN_FUNDING=false             # Validate but don't actually fund (testing mode)

# Alerts and Notifications (optional)
# SLACK_WEBHOOK_URL=https://hooks.slack.com/...
# EMAIL_ALERTS=admin@example.com
# WEBHOOK_ON_LIMIT_EXCEEDED=https://your-monitoring.com/alert

# Example Configuration for Quick Setup:
# 1. Set NETWORK=testnet
# 2. Set ENABLE_FUNDED_TESTS=true  
# 3. Configure FAUCET_1_* variables with your testnet wallet
# 4. Adjust safety limits as needed
# 5. Run: npm run test:funded