// Code generated by gRPC proto compiler.  DO NOT EDIT!
// source: platform.proto

#if !defined(GPB_GRPC_PROTOCOL_ONLY) || !GPB_GRPC_PROTOCOL_ONLY
#import "Platform.pbrpc.h"
#import "Platform.pbobjc.h"
#import <ProtoRPC/ProtoRPCLegacy.h>
#import <RxLibrary/GRXWriter+Immediate.h>

#if defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS) && GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
#import <Protobuf/GPBWrappers.pbobjc.h>
#else
#import "GPBWrappers.pbobjc.h"
#endif
#if defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS) && GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
#import <Protobuf/GPBStruct.pbobjc.h>
#else
#import "GPBStruct.pbobjc.h"
#endif
#if defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS) && GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
#import <Protobuf/GPBTimestamp.pbobjc.h>
#else
#import "GPBTimestamp.pbobjc.h"
#endif

@implementation Platform

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wobjc-designated-initializers"

// Designated initializer
- (instancetype)initWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [super initWithHost:host
                 packageName:@"org.dash.platform.dapi.v0"
                 serviceName:@"Platform"
                 callOptions:callOptions];
}

- (instancetype)initWithHost:(NSString *)host {
  return [super initWithHost:host
                 packageName:@"org.dash.platform.dapi.v0"
                 serviceName:@"Platform"];
}

#pragma clang diagnostic pop

// Override superclass initializer to disallow different package and service names.
- (instancetype)initWithHost:(NSString *)host
                 packageName:(NSString *)packageName
                 serviceName:(NSString *)serviceName {
  return [self initWithHost:host];
}

- (instancetype)initWithHost:(NSString *)host
                 packageName:(NSString *)packageName
                 serviceName:(NSString *)serviceName
                 callOptions:(GRPCCallOptions *)callOptions {
  return [self initWithHost:host callOptions:callOptions];
}

#pragma mark - Class Methods

+ (instancetype)serviceWithHost:(NSString *)host {
  return [[self alloc] initWithHost:host];
}

+ (instancetype)serviceWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [[self alloc] initWithHost:host callOptions:callOptions];
}

#pragma mark - Method Implementations

#pragma mark broadcastStateTransition(BroadcastStateTransitionRequest) returns (BroadcastStateTransitionResponse)

- (void)broadcastStateTransitionWithRequest:(BroadcastStateTransitionRequest *)request handler:(void(^)(BroadcastStateTransitionResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTobroadcastStateTransitionWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTobroadcastStateTransitionWithRequest:(BroadcastStateTransitionRequest *)request handler:(void(^)(BroadcastStateTransitionResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"broadcastStateTransition"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[BroadcastStateTransitionResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)broadcastStateTransitionWithMessage:(BroadcastStateTransitionRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"broadcastStateTransition"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[BroadcastStateTransitionResponse class]];
}

#pragma mark getIdentity(GetIdentityRequest) returns (GetIdentityResponse)

- (void)getIdentityWithRequest:(GetIdentityRequest *)request handler:(void(^)(GetIdentityResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetIdentityWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetIdentityWithRequest:(GetIdentityRequest *)request handler:(void(^)(GetIdentityResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getIdentity"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetIdentityResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getIdentityWithMessage:(GetIdentityRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getIdentity"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetIdentityResponse class]];
}

#pragma mark getIdentityKeys(GetIdentityKeysRequest) returns (GetIdentityKeysResponse)

- (void)getIdentityKeysWithRequest:(GetIdentityKeysRequest *)request handler:(void(^)(GetIdentityKeysResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetIdentityKeysWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetIdentityKeysWithRequest:(GetIdentityKeysRequest *)request handler:(void(^)(GetIdentityKeysResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getIdentityKeys"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetIdentityKeysResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getIdentityKeysWithMessage:(GetIdentityKeysRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getIdentityKeys"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetIdentityKeysResponse class]];
}

#pragma mark getIdentitiesContractKeys(GetIdentitiesContractKeysRequest) returns (GetIdentitiesContractKeysResponse)

- (void)getIdentitiesContractKeysWithRequest:(GetIdentitiesContractKeysRequest *)request handler:(void(^)(GetIdentitiesContractKeysResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetIdentitiesContractKeysWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetIdentitiesContractKeysWithRequest:(GetIdentitiesContractKeysRequest *)request handler:(void(^)(GetIdentitiesContractKeysResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getIdentitiesContractKeys"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetIdentitiesContractKeysResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getIdentitiesContractKeysWithMessage:(GetIdentitiesContractKeysRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getIdentitiesContractKeys"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetIdentitiesContractKeysResponse class]];
}

#pragma mark getIdentityNonce(GetIdentityNonceRequest) returns (GetIdentityNonceResponse)

- (void)getIdentityNonceWithRequest:(GetIdentityNonceRequest *)request handler:(void(^)(GetIdentityNonceResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetIdentityNonceWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetIdentityNonceWithRequest:(GetIdentityNonceRequest *)request handler:(void(^)(GetIdentityNonceResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getIdentityNonce"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetIdentityNonceResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getIdentityNonceWithMessage:(GetIdentityNonceRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getIdentityNonce"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetIdentityNonceResponse class]];
}

#pragma mark getIdentityContractNonce(GetIdentityContractNonceRequest) returns (GetIdentityContractNonceResponse)

- (void)getIdentityContractNonceWithRequest:(GetIdentityContractNonceRequest *)request handler:(void(^)(GetIdentityContractNonceResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetIdentityContractNonceWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetIdentityContractNonceWithRequest:(GetIdentityContractNonceRequest *)request handler:(void(^)(GetIdentityContractNonceResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getIdentityContractNonce"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetIdentityContractNonceResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getIdentityContractNonceWithMessage:(GetIdentityContractNonceRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getIdentityContractNonce"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetIdentityContractNonceResponse class]];
}

#pragma mark getIdentityBalance(GetIdentityBalanceRequest) returns (GetIdentityBalanceResponse)

- (void)getIdentityBalanceWithRequest:(GetIdentityBalanceRequest *)request handler:(void(^)(GetIdentityBalanceResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetIdentityBalanceWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetIdentityBalanceWithRequest:(GetIdentityBalanceRequest *)request handler:(void(^)(GetIdentityBalanceResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getIdentityBalance"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetIdentityBalanceResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getIdentityBalanceWithMessage:(GetIdentityBalanceRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getIdentityBalance"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetIdentityBalanceResponse class]];
}

#pragma mark getIdentitiesBalances(GetIdentitiesBalancesRequest) returns (GetIdentitiesBalancesResponse)

- (void)getIdentitiesBalancesWithRequest:(GetIdentitiesBalancesRequest *)request handler:(void(^)(GetIdentitiesBalancesResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetIdentitiesBalancesWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetIdentitiesBalancesWithRequest:(GetIdentitiesBalancesRequest *)request handler:(void(^)(GetIdentitiesBalancesResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getIdentitiesBalances"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetIdentitiesBalancesResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getIdentitiesBalancesWithMessage:(GetIdentitiesBalancesRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getIdentitiesBalances"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetIdentitiesBalancesResponse class]];
}

#pragma mark getIdentityBalanceAndRevision(GetIdentityBalanceAndRevisionRequest) returns (GetIdentityBalanceAndRevisionResponse)

- (void)getIdentityBalanceAndRevisionWithRequest:(GetIdentityBalanceAndRevisionRequest *)request handler:(void(^)(GetIdentityBalanceAndRevisionResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetIdentityBalanceAndRevisionWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetIdentityBalanceAndRevisionWithRequest:(GetIdentityBalanceAndRevisionRequest *)request handler:(void(^)(GetIdentityBalanceAndRevisionResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getIdentityBalanceAndRevision"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetIdentityBalanceAndRevisionResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getIdentityBalanceAndRevisionWithMessage:(GetIdentityBalanceAndRevisionRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getIdentityBalanceAndRevision"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetIdentityBalanceAndRevisionResponse class]];
}

#pragma mark getEvonodesProposedEpochBlocksByIds(GetEvonodesProposedEpochBlocksByIdsRequest) returns (GetEvonodesProposedEpochBlocksResponse)

- (void)getEvonodesProposedEpochBlocksByIdsWithRequest:(GetEvonodesProposedEpochBlocksByIdsRequest *)request handler:(void(^)(GetEvonodesProposedEpochBlocksResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetEvonodesProposedEpochBlocksByIdsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetEvonodesProposedEpochBlocksByIdsWithRequest:(GetEvonodesProposedEpochBlocksByIdsRequest *)request handler:(void(^)(GetEvonodesProposedEpochBlocksResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getEvonodesProposedEpochBlocksByIds"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetEvonodesProposedEpochBlocksResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getEvonodesProposedEpochBlocksByIdsWithMessage:(GetEvonodesProposedEpochBlocksByIdsRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getEvonodesProposedEpochBlocksByIds"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetEvonodesProposedEpochBlocksResponse class]];
}

#pragma mark getEvonodesProposedEpochBlocksByRange(GetEvonodesProposedEpochBlocksByRangeRequest) returns (GetEvonodesProposedEpochBlocksResponse)

- (void)getEvonodesProposedEpochBlocksByRangeWithRequest:(GetEvonodesProposedEpochBlocksByRangeRequest *)request handler:(void(^)(GetEvonodesProposedEpochBlocksResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetEvonodesProposedEpochBlocksByRangeWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetEvonodesProposedEpochBlocksByRangeWithRequest:(GetEvonodesProposedEpochBlocksByRangeRequest *)request handler:(void(^)(GetEvonodesProposedEpochBlocksResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getEvonodesProposedEpochBlocksByRange"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetEvonodesProposedEpochBlocksResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getEvonodesProposedEpochBlocksByRangeWithMessage:(GetEvonodesProposedEpochBlocksByRangeRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getEvonodesProposedEpochBlocksByRange"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetEvonodesProposedEpochBlocksResponse class]];
}

#pragma mark getDataContract(GetDataContractRequest) returns (GetDataContractResponse)

- (void)getDataContractWithRequest:(GetDataContractRequest *)request handler:(void(^)(GetDataContractResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetDataContractWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetDataContractWithRequest:(GetDataContractRequest *)request handler:(void(^)(GetDataContractResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getDataContract"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetDataContractResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getDataContractWithMessage:(GetDataContractRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getDataContract"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetDataContractResponse class]];
}

#pragma mark getDataContractHistory(GetDataContractHistoryRequest) returns (GetDataContractHistoryResponse)

- (void)getDataContractHistoryWithRequest:(GetDataContractHistoryRequest *)request handler:(void(^)(GetDataContractHistoryResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetDataContractHistoryWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetDataContractHistoryWithRequest:(GetDataContractHistoryRequest *)request handler:(void(^)(GetDataContractHistoryResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getDataContractHistory"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetDataContractHistoryResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getDataContractHistoryWithMessage:(GetDataContractHistoryRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getDataContractHistory"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetDataContractHistoryResponse class]];
}

#pragma mark getDataContracts(GetDataContractsRequest) returns (GetDataContractsResponse)

- (void)getDataContractsWithRequest:(GetDataContractsRequest *)request handler:(void(^)(GetDataContractsResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetDataContractsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetDataContractsWithRequest:(GetDataContractsRequest *)request handler:(void(^)(GetDataContractsResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getDataContracts"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetDataContractsResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getDataContractsWithMessage:(GetDataContractsRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getDataContracts"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetDataContractsResponse class]];
}

#pragma mark getDocuments(GetDocumentsRequest) returns (GetDocumentsResponse)

- (void)getDocumentsWithRequest:(GetDocumentsRequest *)request handler:(void(^)(GetDocumentsResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetDocumentsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetDocumentsWithRequest:(GetDocumentsRequest *)request handler:(void(^)(GetDocumentsResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getDocuments"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetDocumentsResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getDocumentsWithMessage:(GetDocumentsRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getDocuments"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetDocumentsResponse class]];
}

#pragma mark getIdentityByPublicKeyHash(GetIdentityByPublicKeyHashRequest) returns (GetIdentityByPublicKeyHashResponse)

- (void)getIdentityByPublicKeyHashWithRequest:(GetIdentityByPublicKeyHashRequest *)request handler:(void(^)(GetIdentityByPublicKeyHashResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetIdentityByPublicKeyHashWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetIdentityByPublicKeyHashWithRequest:(GetIdentityByPublicKeyHashRequest *)request handler:(void(^)(GetIdentityByPublicKeyHashResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getIdentityByPublicKeyHash"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetIdentityByPublicKeyHashResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getIdentityByPublicKeyHashWithMessage:(GetIdentityByPublicKeyHashRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getIdentityByPublicKeyHash"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetIdentityByPublicKeyHashResponse class]];
}

#pragma mark getIdentityByNonUniquePublicKeyHash(GetIdentityByNonUniquePublicKeyHashRequest) returns (GetIdentityByNonUniquePublicKeyHashResponse)

- (void)getIdentityByNonUniquePublicKeyHashWithRequest:(GetIdentityByNonUniquePublicKeyHashRequest *)request handler:(void(^)(GetIdentityByNonUniquePublicKeyHashResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetIdentityByNonUniquePublicKeyHashWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetIdentityByNonUniquePublicKeyHashWithRequest:(GetIdentityByNonUniquePublicKeyHashRequest *)request handler:(void(^)(GetIdentityByNonUniquePublicKeyHashResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getIdentityByNonUniquePublicKeyHash"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetIdentityByNonUniquePublicKeyHashResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getIdentityByNonUniquePublicKeyHashWithMessage:(GetIdentityByNonUniquePublicKeyHashRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getIdentityByNonUniquePublicKeyHash"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetIdentityByNonUniquePublicKeyHashResponse class]];
}

#pragma mark waitForStateTransitionResult(WaitForStateTransitionResultRequest) returns (WaitForStateTransitionResultResponse)

- (void)waitForStateTransitionResultWithRequest:(WaitForStateTransitionResultRequest *)request handler:(void(^)(WaitForStateTransitionResultResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTowaitForStateTransitionResultWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTowaitForStateTransitionResultWithRequest:(WaitForStateTransitionResultRequest *)request handler:(void(^)(WaitForStateTransitionResultResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"waitForStateTransitionResult"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[WaitForStateTransitionResultResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)waitForStateTransitionResultWithMessage:(WaitForStateTransitionResultRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"waitForStateTransitionResult"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[WaitForStateTransitionResultResponse class]];
}

#pragma mark getConsensusParams(GetConsensusParamsRequest) returns (GetConsensusParamsResponse)

- (void)getConsensusParamsWithRequest:(GetConsensusParamsRequest *)request handler:(void(^)(GetConsensusParamsResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetConsensusParamsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetConsensusParamsWithRequest:(GetConsensusParamsRequest *)request handler:(void(^)(GetConsensusParamsResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getConsensusParams"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetConsensusParamsResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getConsensusParamsWithMessage:(GetConsensusParamsRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getConsensusParams"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetConsensusParamsResponse class]];
}

#pragma mark getProtocolVersionUpgradeState(GetProtocolVersionUpgradeStateRequest) returns (GetProtocolVersionUpgradeStateResponse)

- (void)getProtocolVersionUpgradeStateWithRequest:(GetProtocolVersionUpgradeStateRequest *)request handler:(void(^)(GetProtocolVersionUpgradeStateResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetProtocolVersionUpgradeStateWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetProtocolVersionUpgradeStateWithRequest:(GetProtocolVersionUpgradeStateRequest *)request handler:(void(^)(GetProtocolVersionUpgradeStateResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getProtocolVersionUpgradeState"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetProtocolVersionUpgradeStateResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getProtocolVersionUpgradeStateWithMessage:(GetProtocolVersionUpgradeStateRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getProtocolVersionUpgradeState"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetProtocolVersionUpgradeStateResponse class]];
}

#pragma mark getProtocolVersionUpgradeVoteStatus(GetProtocolVersionUpgradeVoteStatusRequest) returns (GetProtocolVersionUpgradeVoteStatusResponse)

- (void)getProtocolVersionUpgradeVoteStatusWithRequest:(GetProtocolVersionUpgradeVoteStatusRequest *)request handler:(void(^)(GetProtocolVersionUpgradeVoteStatusResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetProtocolVersionUpgradeVoteStatusWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetProtocolVersionUpgradeVoteStatusWithRequest:(GetProtocolVersionUpgradeVoteStatusRequest *)request handler:(void(^)(GetProtocolVersionUpgradeVoteStatusResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getProtocolVersionUpgradeVoteStatus"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetProtocolVersionUpgradeVoteStatusResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getProtocolVersionUpgradeVoteStatusWithMessage:(GetProtocolVersionUpgradeVoteStatusRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getProtocolVersionUpgradeVoteStatus"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetProtocolVersionUpgradeVoteStatusResponse class]];
}

#pragma mark getEpochsInfo(GetEpochsInfoRequest) returns (GetEpochsInfoResponse)

- (void)getEpochsInfoWithRequest:(GetEpochsInfoRequest *)request handler:(void(^)(GetEpochsInfoResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetEpochsInfoWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetEpochsInfoWithRequest:(GetEpochsInfoRequest *)request handler:(void(^)(GetEpochsInfoResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getEpochsInfo"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetEpochsInfoResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getEpochsInfoWithMessage:(GetEpochsInfoRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getEpochsInfo"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetEpochsInfoResponse class]];
}

#pragma mark getFinalizedEpochInfos(GetFinalizedEpochInfosRequest) returns (GetFinalizedEpochInfosResponse)

- (void)getFinalizedEpochInfosWithRequest:(GetFinalizedEpochInfosRequest *)request handler:(void(^)(GetFinalizedEpochInfosResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetFinalizedEpochInfosWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetFinalizedEpochInfosWithRequest:(GetFinalizedEpochInfosRequest *)request handler:(void(^)(GetFinalizedEpochInfosResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getFinalizedEpochInfos"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetFinalizedEpochInfosResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getFinalizedEpochInfosWithMessage:(GetFinalizedEpochInfosRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getFinalizedEpochInfos"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetFinalizedEpochInfosResponse class]];
}

#pragma mark getContestedResources(GetContestedResourcesRequest) returns (GetContestedResourcesResponse)

/**
 * What votes are currently happening for a specific contested index
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)getContestedResourcesWithRequest:(GetContestedResourcesRequest *)request handler:(void(^)(GetContestedResourcesResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetContestedResourcesWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * What votes are currently happening for a specific contested index
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCTogetContestedResourcesWithRequest:(GetContestedResourcesRequest *)request handler:(void(^)(GetContestedResourcesResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getContestedResources"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetContestedResourcesResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * What votes are currently happening for a specific contested index
 */
- (GRPCUnaryProtoCall *)getContestedResourcesWithMessage:(GetContestedResourcesRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getContestedResources"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetContestedResourcesResponse class]];
}

#pragma mark getContestedResourceVoteState(GetContestedResourceVoteStateRequest) returns (GetContestedResourceVoteStateResponse)

/**
 * What's the state of a contested resource vote? (ie who is winning?)
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)getContestedResourceVoteStateWithRequest:(GetContestedResourceVoteStateRequest *)request handler:(void(^)(GetContestedResourceVoteStateResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetContestedResourceVoteStateWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * What's the state of a contested resource vote? (ie who is winning?)
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCTogetContestedResourceVoteStateWithRequest:(GetContestedResourceVoteStateRequest *)request handler:(void(^)(GetContestedResourceVoteStateResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getContestedResourceVoteState"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetContestedResourceVoteStateResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * What's the state of a contested resource vote? (ie who is winning?)
 */
- (GRPCUnaryProtoCall *)getContestedResourceVoteStateWithMessage:(GetContestedResourceVoteStateRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getContestedResourceVoteState"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetContestedResourceVoteStateResponse class]];
}

#pragma mark getContestedResourceVotersForIdentity(GetContestedResourceVotersForIdentityRequest) returns (GetContestedResourceVotersForIdentityResponse)

/**
 * Who voted for a contested resource to go to a specific identity?
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)getContestedResourceVotersForIdentityWithRequest:(GetContestedResourceVotersForIdentityRequest *)request handler:(void(^)(GetContestedResourceVotersForIdentityResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetContestedResourceVotersForIdentityWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * Who voted for a contested resource to go to a specific identity?
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCTogetContestedResourceVotersForIdentityWithRequest:(GetContestedResourceVotersForIdentityRequest *)request handler:(void(^)(GetContestedResourceVotersForIdentityResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getContestedResourceVotersForIdentity"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetContestedResourceVotersForIdentityResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * Who voted for a contested resource to go to a specific identity?
 */
- (GRPCUnaryProtoCall *)getContestedResourceVotersForIdentityWithMessage:(GetContestedResourceVotersForIdentityRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getContestedResourceVotersForIdentity"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetContestedResourceVotersForIdentityResponse class]];
}

#pragma mark getContestedResourceIdentityVotes(GetContestedResourceIdentityVotesRequest) returns (GetContestedResourceIdentityVotesResponse)

/**
 * How did an identity vote?
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)getContestedResourceIdentityVotesWithRequest:(GetContestedResourceIdentityVotesRequest *)request handler:(void(^)(GetContestedResourceIdentityVotesResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetContestedResourceIdentityVotesWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * How did an identity vote?
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCTogetContestedResourceIdentityVotesWithRequest:(GetContestedResourceIdentityVotesRequest *)request handler:(void(^)(GetContestedResourceIdentityVotesResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getContestedResourceIdentityVotes"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetContestedResourceIdentityVotesResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * How did an identity vote?
 */
- (GRPCUnaryProtoCall *)getContestedResourceIdentityVotesWithMessage:(GetContestedResourceIdentityVotesRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getContestedResourceIdentityVotes"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetContestedResourceIdentityVotesResponse class]];
}

#pragma mark getVotePollsByEndDate(GetVotePollsByEndDateRequest) returns (GetVotePollsByEndDateResponse)

/**
 * What vote polls will end soon?
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)getVotePollsByEndDateWithRequest:(GetVotePollsByEndDateRequest *)request handler:(void(^)(GetVotePollsByEndDateResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetVotePollsByEndDateWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * What vote polls will end soon?
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCTogetVotePollsByEndDateWithRequest:(GetVotePollsByEndDateRequest *)request handler:(void(^)(GetVotePollsByEndDateResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getVotePollsByEndDate"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetVotePollsByEndDateResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * What vote polls will end soon?
 */
- (GRPCUnaryProtoCall *)getVotePollsByEndDateWithMessage:(GetVotePollsByEndDateRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getVotePollsByEndDate"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetVotePollsByEndDateResponse class]];
}

#pragma mark getPrefundedSpecializedBalance(GetPrefundedSpecializedBalanceRequest) returns (GetPrefundedSpecializedBalanceResponse)

- (void)getPrefundedSpecializedBalanceWithRequest:(GetPrefundedSpecializedBalanceRequest *)request handler:(void(^)(GetPrefundedSpecializedBalanceResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetPrefundedSpecializedBalanceWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetPrefundedSpecializedBalanceWithRequest:(GetPrefundedSpecializedBalanceRequest *)request handler:(void(^)(GetPrefundedSpecializedBalanceResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getPrefundedSpecializedBalance"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetPrefundedSpecializedBalanceResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getPrefundedSpecializedBalanceWithMessage:(GetPrefundedSpecializedBalanceRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getPrefundedSpecializedBalance"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetPrefundedSpecializedBalanceResponse class]];
}

#pragma mark getTotalCreditsInPlatform(GetTotalCreditsInPlatformRequest) returns (GetTotalCreditsInPlatformResponse)

- (void)getTotalCreditsInPlatformWithRequest:(GetTotalCreditsInPlatformRequest *)request handler:(void(^)(GetTotalCreditsInPlatformResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetTotalCreditsInPlatformWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetTotalCreditsInPlatformWithRequest:(GetTotalCreditsInPlatformRequest *)request handler:(void(^)(GetTotalCreditsInPlatformResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getTotalCreditsInPlatform"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetTotalCreditsInPlatformResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getTotalCreditsInPlatformWithMessage:(GetTotalCreditsInPlatformRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getTotalCreditsInPlatform"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetTotalCreditsInPlatformResponse class]];
}

#pragma mark getPathElements(GetPathElementsRequest) returns (GetPathElementsResponse)

- (void)getPathElementsWithRequest:(GetPathElementsRequest *)request handler:(void(^)(GetPathElementsResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetPathElementsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetPathElementsWithRequest:(GetPathElementsRequest *)request handler:(void(^)(GetPathElementsResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getPathElements"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetPathElementsResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getPathElementsWithMessage:(GetPathElementsRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getPathElements"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetPathElementsResponse class]];
}

#pragma mark getStatus(GetStatusRequest) returns (GetStatusResponse)

- (void)getStatusWithRequest:(GetStatusRequest *)request handler:(void(^)(GetStatusResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetStatusWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetStatusWithRequest:(GetStatusRequest *)request handler:(void(^)(GetStatusResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getStatus"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetStatusResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getStatusWithMessage:(GetStatusRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getStatus"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetStatusResponse class]];
}

#pragma mark getCurrentQuorumsInfo(GetCurrentQuorumsInfoRequest) returns (GetCurrentQuorumsInfoResponse)

- (void)getCurrentQuorumsInfoWithRequest:(GetCurrentQuorumsInfoRequest *)request handler:(void(^)(GetCurrentQuorumsInfoResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetCurrentQuorumsInfoWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetCurrentQuorumsInfoWithRequest:(GetCurrentQuorumsInfoRequest *)request handler:(void(^)(GetCurrentQuorumsInfoResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getCurrentQuorumsInfo"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetCurrentQuorumsInfoResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getCurrentQuorumsInfoWithMessage:(GetCurrentQuorumsInfoRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getCurrentQuorumsInfo"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetCurrentQuorumsInfoResponse class]];
}

#pragma mark getIdentityTokenBalances(GetIdentityTokenBalancesRequest) returns (GetIdentityTokenBalancesResponse)

- (void)getIdentityTokenBalancesWithRequest:(GetIdentityTokenBalancesRequest *)request handler:(void(^)(GetIdentityTokenBalancesResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetIdentityTokenBalancesWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetIdentityTokenBalancesWithRequest:(GetIdentityTokenBalancesRequest *)request handler:(void(^)(GetIdentityTokenBalancesResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getIdentityTokenBalances"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetIdentityTokenBalancesResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getIdentityTokenBalancesWithMessage:(GetIdentityTokenBalancesRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getIdentityTokenBalances"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetIdentityTokenBalancesResponse class]];
}

#pragma mark getIdentitiesTokenBalances(GetIdentitiesTokenBalancesRequest) returns (GetIdentitiesTokenBalancesResponse)

- (void)getIdentitiesTokenBalancesWithRequest:(GetIdentitiesTokenBalancesRequest *)request handler:(void(^)(GetIdentitiesTokenBalancesResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetIdentitiesTokenBalancesWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetIdentitiesTokenBalancesWithRequest:(GetIdentitiesTokenBalancesRequest *)request handler:(void(^)(GetIdentitiesTokenBalancesResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getIdentitiesTokenBalances"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetIdentitiesTokenBalancesResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getIdentitiesTokenBalancesWithMessage:(GetIdentitiesTokenBalancesRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getIdentitiesTokenBalances"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetIdentitiesTokenBalancesResponse class]];
}

#pragma mark getIdentityTokenInfos(GetIdentityTokenInfosRequest) returns (GetIdentityTokenInfosResponse)

- (void)getIdentityTokenInfosWithRequest:(GetIdentityTokenInfosRequest *)request handler:(void(^)(GetIdentityTokenInfosResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetIdentityTokenInfosWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetIdentityTokenInfosWithRequest:(GetIdentityTokenInfosRequest *)request handler:(void(^)(GetIdentityTokenInfosResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getIdentityTokenInfos"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetIdentityTokenInfosResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getIdentityTokenInfosWithMessage:(GetIdentityTokenInfosRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getIdentityTokenInfos"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetIdentityTokenInfosResponse class]];
}

#pragma mark getIdentitiesTokenInfos(GetIdentitiesTokenInfosRequest) returns (GetIdentitiesTokenInfosResponse)

- (void)getIdentitiesTokenInfosWithRequest:(GetIdentitiesTokenInfosRequest *)request handler:(void(^)(GetIdentitiesTokenInfosResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetIdentitiesTokenInfosWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetIdentitiesTokenInfosWithRequest:(GetIdentitiesTokenInfosRequest *)request handler:(void(^)(GetIdentitiesTokenInfosResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getIdentitiesTokenInfos"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetIdentitiesTokenInfosResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getIdentitiesTokenInfosWithMessage:(GetIdentitiesTokenInfosRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getIdentitiesTokenInfos"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetIdentitiesTokenInfosResponse class]];
}

#pragma mark getTokenStatuses(GetTokenStatusesRequest) returns (GetTokenStatusesResponse)

- (void)getTokenStatusesWithRequest:(GetTokenStatusesRequest *)request handler:(void(^)(GetTokenStatusesResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetTokenStatusesWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetTokenStatusesWithRequest:(GetTokenStatusesRequest *)request handler:(void(^)(GetTokenStatusesResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getTokenStatuses"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetTokenStatusesResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getTokenStatusesWithMessage:(GetTokenStatusesRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getTokenStatuses"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetTokenStatusesResponse class]];
}

#pragma mark getTokenDirectPurchasePrices(GetTokenDirectPurchasePricesRequest) returns (GetTokenDirectPurchasePricesResponse)

- (void)getTokenDirectPurchasePricesWithRequest:(GetTokenDirectPurchasePricesRequest *)request handler:(void(^)(GetTokenDirectPurchasePricesResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetTokenDirectPurchasePricesWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetTokenDirectPurchasePricesWithRequest:(GetTokenDirectPurchasePricesRequest *)request handler:(void(^)(GetTokenDirectPurchasePricesResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getTokenDirectPurchasePrices"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetTokenDirectPurchasePricesResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getTokenDirectPurchasePricesWithMessage:(GetTokenDirectPurchasePricesRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getTokenDirectPurchasePrices"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetTokenDirectPurchasePricesResponse class]];
}

#pragma mark getTokenContractInfo(GetTokenContractInfoRequest) returns (GetTokenContractInfoResponse)

- (void)getTokenContractInfoWithRequest:(GetTokenContractInfoRequest *)request handler:(void(^)(GetTokenContractInfoResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetTokenContractInfoWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetTokenContractInfoWithRequest:(GetTokenContractInfoRequest *)request handler:(void(^)(GetTokenContractInfoResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getTokenContractInfo"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetTokenContractInfoResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getTokenContractInfoWithMessage:(GetTokenContractInfoRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getTokenContractInfo"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetTokenContractInfoResponse class]];
}

#pragma mark getTokenPreProgrammedDistributions(GetTokenPreProgrammedDistributionsRequest) returns (GetTokenPreProgrammedDistributionsResponse)

- (void)getTokenPreProgrammedDistributionsWithRequest:(GetTokenPreProgrammedDistributionsRequest *)request handler:(void(^)(GetTokenPreProgrammedDistributionsResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetTokenPreProgrammedDistributionsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetTokenPreProgrammedDistributionsWithRequest:(GetTokenPreProgrammedDistributionsRequest *)request handler:(void(^)(GetTokenPreProgrammedDistributionsResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getTokenPreProgrammedDistributions"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetTokenPreProgrammedDistributionsResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getTokenPreProgrammedDistributionsWithMessage:(GetTokenPreProgrammedDistributionsRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getTokenPreProgrammedDistributions"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetTokenPreProgrammedDistributionsResponse class]];
}

#pragma mark getTokenPerpetualDistributionLastClaim(GetTokenPerpetualDistributionLastClaimRequest) returns (GetTokenPerpetualDistributionLastClaimResponse)

- (void)getTokenPerpetualDistributionLastClaimWithRequest:(GetTokenPerpetualDistributionLastClaimRequest *)request handler:(void(^)(GetTokenPerpetualDistributionLastClaimResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetTokenPerpetualDistributionLastClaimWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetTokenPerpetualDistributionLastClaimWithRequest:(GetTokenPerpetualDistributionLastClaimRequest *)request handler:(void(^)(GetTokenPerpetualDistributionLastClaimResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getTokenPerpetualDistributionLastClaim"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetTokenPerpetualDistributionLastClaimResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getTokenPerpetualDistributionLastClaimWithMessage:(GetTokenPerpetualDistributionLastClaimRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getTokenPerpetualDistributionLastClaim"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetTokenPerpetualDistributionLastClaimResponse class]];
}

#pragma mark getTokenTotalSupply(GetTokenTotalSupplyRequest) returns (GetTokenTotalSupplyResponse)

- (void)getTokenTotalSupplyWithRequest:(GetTokenTotalSupplyRequest *)request handler:(void(^)(GetTokenTotalSupplyResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetTokenTotalSupplyWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetTokenTotalSupplyWithRequest:(GetTokenTotalSupplyRequest *)request handler:(void(^)(GetTokenTotalSupplyResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getTokenTotalSupply"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetTokenTotalSupplyResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getTokenTotalSupplyWithMessage:(GetTokenTotalSupplyRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getTokenTotalSupply"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetTokenTotalSupplyResponse class]];
}

#pragma mark getGroupInfo(GetGroupInfoRequest) returns (GetGroupInfoResponse)

- (void)getGroupInfoWithRequest:(GetGroupInfoRequest *)request handler:(void(^)(GetGroupInfoResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetGroupInfoWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetGroupInfoWithRequest:(GetGroupInfoRequest *)request handler:(void(^)(GetGroupInfoResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getGroupInfo"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetGroupInfoResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getGroupInfoWithMessage:(GetGroupInfoRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getGroupInfo"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetGroupInfoResponse class]];
}

#pragma mark getGroupInfos(GetGroupInfosRequest) returns (GetGroupInfosResponse)

- (void)getGroupInfosWithRequest:(GetGroupInfosRequest *)request handler:(void(^)(GetGroupInfosResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetGroupInfosWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetGroupInfosWithRequest:(GetGroupInfosRequest *)request handler:(void(^)(GetGroupInfosResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getGroupInfos"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetGroupInfosResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getGroupInfosWithMessage:(GetGroupInfosRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getGroupInfos"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetGroupInfosResponse class]];
}

#pragma mark getGroupActions(GetGroupActionsRequest) returns (GetGroupActionsResponse)

- (void)getGroupActionsWithRequest:(GetGroupActionsRequest *)request handler:(void(^)(GetGroupActionsResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetGroupActionsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetGroupActionsWithRequest:(GetGroupActionsRequest *)request handler:(void(^)(GetGroupActionsResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getGroupActions"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetGroupActionsResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getGroupActionsWithMessage:(GetGroupActionsRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getGroupActions"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetGroupActionsResponse class]];
}

#pragma mark getGroupActionSigners(GetGroupActionSignersRequest) returns (GetGroupActionSignersResponse)

- (void)getGroupActionSignersWithRequest:(GetGroupActionSignersRequest *)request handler:(void(^)(GetGroupActionSignersResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCTogetGroupActionSignersWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCTogetGroupActionSignersWithRequest:(GetGroupActionSignersRequest *)request handler:(void(^)(GetGroupActionSignersResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"getGroupActionSigners"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[GetGroupActionSignersResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getGroupActionSignersWithMessage:(GetGroupActionSignersRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"getGroupActionSigners"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[GetGroupActionSignersResponse class]];
}

@end
#endif
