[package]
name = "dapi-grpc"
description = "GRPC client for Dash Platform"
version = "1.0.0-dev.9"
authors = [
  "Samuel Westrich <sam@dash.org>",
  "Igor Markin <igor.markin@dash.org>",
  "≈Åukasz Klimek <lukasz.klimek@dash.org>",
  "Anton Suprunchuk <anton.suprunchuk@dash.org>",
  "Ivan Shumkov <shumkov@dash.org>",
]
edition = "2021"
rust-version = "1.76"
license = "MIT"

[features]
# Enable all features by default, otherwise different crates
# triggier bulding proto with different feature set that overwrites
# previous results and causes build errors
default = ["core", "platform", "client", "serde", "server"]
core = []
platform = []
# Re-export Dash Platform protobuf types as `dapi_grpc::platform::proto`
tenderdash-proto = []
client = ["tonic/channel", "tonic/tls", "tonic/tls-roots", "platform"]
server = ["tonic/channel", "tonic/tls", "tonic/tls-roots", "platform"]
serde = ["dep:serde", "dep:serde_bytes"]
mocks = ["dep:serde_json"]

[dependencies]
prost = { version = "0.12.3" }
futures-core = "0.3.30"
tonic = { version = "0.11", features = [
  "codegen",
  "prost",
], default-features = false }
serde = { version = "1.0.171", optional = true, features = ["derive"] }
serde_bytes = { version = "0.11.12", optional = true }
serde_json = { version = "1.0", optional = true }
tenderdash-proto = { git = "https://github.com/dashpay/rs-tenderdash-abci", version = "0.14.0-dev.9", features = [
  "grpc",
] }
dapi-grpc-macros = { path = "../rs-dapi-grpc-macros" }
platform-version = { path = "../rs-platform-version" }

[build-dependencies]
tonic-build = { version = "0.9.2" }

[lib]

[[example]]
name = "core_example"
path = "clients/core/v0/rust/core_example.rs"


[[example]]
name = "platform_example"
path = "clients/platform/v0/rust/platform_example.rs"

[package.metadata.cargo-machete]
ignored = ["platform-version", "serde_bytes"]
