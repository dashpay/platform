// Mock header file for Swift Dash SDK
// This represents what would be generated by cbindgen

#ifndef SWIFT_DASH_SDK_H
#define SWIFT_DASH_SDK_H

#include <stdint.h>
#include <stdbool.h>
#include <stddef.h>

// Error codes
typedef enum {
    SwiftDashErrorCode_Success = 0,
    SwiftDashErrorCode_InvalidParameter = 1,
    SwiftDashErrorCode_InvalidState = 2,
    SwiftDashErrorCode_NetworkError = 3,
    SwiftDashErrorCode_SerializationError = 4,
    SwiftDashErrorCode_ProtocolError = 5,
    SwiftDashErrorCode_CryptoError = 6,
    SwiftDashErrorCode_NotFound = 7,
    SwiftDashErrorCode_Timeout = 8,
    SwiftDashErrorCode_NotImplemented = 9,
    SwiftDashErrorCode_InternalError = 99,
} SwiftDashErrorCode;

// Network types
typedef enum {
    SwiftDashNetwork_Mainnet = 0,
    SwiftDashNetwork_Testnet = 1,
    SwiftDashNetwork_Devnet = 2,
    SwiftDashNetwork_Local = 3,
} SwiftDashNetwork;

// Opaque handle types
typedef struct SDKHandle SDKHandle;
typedef struct IdentityHandle IdentityHandle;
typedef struct DataContractHandle DataContractHandle;
typedef struct DocumentHandle DocumentHandle;
typedef struct SignerHandle SignerHandle;

// Error structure
typedef struct {
    SwiftDashErrorCode code;
    char *message;
} SwiftDashError;

// SDK Configuration
typedef struct {
    SwiftDashNetwork network;
    bool skip_asset_lock_proof_verification;
    uint32_t request_retry_count;
    uint64_t request_timeout_ms;
} SwiftDashSDKConfig;

// Put settings
typedef struct {
    uint64_t connect_timeout_ms;
    uint64_t timeout_ms;
    uint32_t retries;
    bool ban_failed_address;
    uint64_t identity_nonce_stale_time_s;
    uint16_t user_fee_increase;
    bool allow_signing_with_any_security_level;
    bool allow_signing_with_any_purpose;
    uint64_t wait_timeout_ms;
} SwiftDashPutSettings;

// Identity info
typedef struct {
    char *id;
    uint64_t balance;
    uint64_t revision;
    uint32_t public_keys_count;
} SwiftDashIdentityInfo;

// Document info
typedef struct {
    char *id;
    char *owner_id;
    char *data_contract_id;
    char *document_type;
    uint64_t revision;
    int64_t created_at;
    int64_t updated_at;
} SwiftDashDocumentInfo;

// Binary data
typedef struct {
    uint8_t *data;
    size_t len;
} SwiftDashBinaryData;

// Transfer credits result
typedef struct {
    uint64_t amount;
    char *recipient_id;
    uint8_t *transaction_data;
    size_t transaction_data_len;
} SwiftDashTransferCreditsResult;

// SDK functions
void swift_dash_sdk_init(void);
SDKHandle *swift_dash_sdk_create(SwiftDashSDKConfig config);
void swift_dash_sdk_destroy(SDKHandle *handle);
SwiftDashNetwork swift_dash_sdk_get_network(SDKHandle *handle);
char *swift_dash_sdk_get_version(void);

// Configuration helpers
SwiftDashSDKConfig swift_dash_sdk_config_mainnet(void);
SwiftDashSDKConfig swift_dash_sdk_config_testnet(void);
SwiftDashSDKConfig swift_dash_sdk_config_local(void);
SwiftDashPutSettings swift_dash_put_settings_default(void);

// Identity functions
IdentityHandle *swift_dash_identity_fetch(SDKHandle *sdk_handle, const char *identity_id);
SwiftDashIdentityInfo *swift_dash_identity_get_info(IdentityHandle *identity_handle);
SwiftDashBinaryData *swift_dash_identity_put_to_platform_with_instant_lock(
    SDKHandle *sdk_handle,
    IdentityHandle *identity_handle,
    uint32_t public_key_id,
    SignerHandle *signer_handle,
    const SwiftDashPutSettings *settings
);
IdentityHandle *swift_dash_identity_put_to_platform_with_instant_lock_and_wait(
    SDKHandle *sdk_handle,
    IdentityHandle *identity_handle,
    uint32_t public_key_id,
    SignerHandle *signer_handle,
    const SwiftDashPutSettings *settings
);
SwiftDashTransferCreditsResult *swift_dash_identity_transfer_credits(
    SDKHandle *sdk_handle,
    IdentityHandle *identity_handle,
    const char *recipient_id,
    uint64_t amount,
    uint32_t public_key_id,
    SignerHandle *signer_handle,
    const SwiftDashPutSettings *settings
);

// Data contract functions
DataContractHandle *swift_dash_data_contract_fetch(SDKHandle *sdk_handle, const char *contract_id);
DataContractHandle *swift_dash_data_contract_create(
    SDKHandle *sdk_handle,
    const char *owner_identity_id,
    const char *schema_json
);
char *swift_dash_data_contract_get_info(DataContractHandle *contract_handle);
SwiftDashBinaryData *swift_dash_data_contract_put_to_platform(
    SDKHandle *sdk_handle,
    DataContractHandle *contract_handle,
    uint32_t public_key_id,
    SignerHandle *signer_handle,
    const SwiftDashPutSettings *settings
);

// Document functions
DocumentHandle *swift_dash_document_create(
    SDKHandle *sdk_handle,
    DataContractHandle *contract_handle,
    const char *owner_identity_id,
    const char *document_type,
    const char *data_json
);
DocumentHandle *swift_dash_document_fetch(
    SDKHandle *sdk_handle,
    DataContractHandle *contract_handle,
    const char *document_type,
    const char *document_id
);
SwiftDashDocumentInfo *swift_dash_document_get_info(DocumentHandle *document_handle);
SwiftDashBinaryData *swift_dash_document_put_to_platform(
    SDKHandle *sdk_handle,
    DocumentHandle *document_handle,
    uint32_t public_key_id,
    SignerHandle *signer_handle,
    const SwiftDashPutSettings *settings
);

// Signer functions
SignerHandle *swift_dash_signer_create_test(void);
void swift_dash_signer_destroy(SignerHandle *handle);

// Memory management
void swift_dash_error_free(SwiftDashError *error);
void swift_dash_identity_info_free(SwiftDashIdentityInfo *info);
void swift_dash_document_info_free(SwiftDashDocumentInfo *info);
void swift_dash_binary_data_free(SwiftDashBinaryData *data);
void swift_dash_transfer_credits_result_free(SwiftDashTransferCreditsResult *result);

#endif // SWIFT_DASH_SDK_H