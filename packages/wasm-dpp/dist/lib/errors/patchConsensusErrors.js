"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.patchConsensusErrors = void 0;
const dpp_module = __importStar(require("../../wasm/wasm_dpp"));
const extend_1 = require("../utils/extend");
const AbstractConsensusError_1 = require("./AbstractConsensusError");
function patchConsensusErrors() {
    extend_1.extend(dpp_module.ProtocolVersionParsingError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.UnsupportedProtocolVersionError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.IncompatibleProtocolVersionError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.SerializedObjectParsingError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.JsonSchemaError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidIdentifierError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DataContractMaxDepthExceedError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DuplicateIndexError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidCompoundIndexError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidDataContractIdError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidIndexedPropertyConstraintError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidIndexPropertyTypeError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.SystemPropertyIndexAlreadyPresentError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.UndefinedIndexPropertyError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.UniqueIndicesLimitReachedError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InconsistentCompoundIndexDataError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidDocumentTransitionActionError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidDocumentTransitionIdError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DataContractNotPresentError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidDocumentTypeError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.MissingDataContractIdError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.MissingDocumentTransitionActionError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.MissingDocumentTransitionTypeError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.MissingDocumentTypeError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DuplicatedIdentityPublicKeyError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DuplicatedIdentityPublicKeyIdError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.MissingMasterPublicKeyError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.IdentityAssetLockProofLockedTransactionMismatchError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.IdentityAssetLockTransactionIsNotFoundError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.IdentityAssetLockTransactionOutPointAlreadyExistsError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.IdentityAssetLockTransactionOutputNotFoundError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidAssetLockProofCoreChainHeightError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidAssetLockProofTransactionHeightError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidIdentityAssetLockTransactionError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidIdentityAssetLockTransactionOutputError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidIdentityPublicKeyDataError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidIdentityPublicKeySecurityLevelError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidStateTransitionTypeError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.MissingStateTransitionTypeError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.StateTransitionMaxSizeExceededError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.IdentityNotFoundError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidIdentityPublicKeyTypeError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidStateTransitionSignatureError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.MissingPublicKeyError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.BalanceIsNotEnoughError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DataContractAlreadyPresentError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DataTriggerConditionError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DataTriggerExecutionError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DataTriggerInvalidResultError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DocumentAlreadyPresentError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DocumentNotFoundError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DocumentOwnerIdMismatchError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DocumentTimestampsMismatchError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DocumentTimestampWindowViolationError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DuplicateUniqueIndexError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidDocumentRevisionError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.IdentityAlreadyExistsError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidJsonSchemaRefError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.JsonSchemaCompilationError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DuplicateDocumentTransitionsWithIdsError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DuplicateDocumentTransitionsWithIndicesError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidAssetLockTransactionOutputReturnSizeError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidInstantAssetLockProofError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidInstantAssetLockProofSignatureError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.IncompatibleRe2PatternError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidDataContractVersionError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.IncompatibleDataContractSchemaError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DataContractImmutablePropertiesUpdateError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DataContractUniqueIndicesChangedError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DuplicateIndexNameError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DataContractInvalidIndexDefinitionUpdateError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DataContractHaveNewUniqueIndexError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.IdentityPublicKeyDisabledAtWindowViolationError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.IdentityPublicKeyIsReadOnlyError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidIdentityPublicKeyIdError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidIdentityRevisionError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.MaxIdentityPublicKeyLimitReachedError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidIdentityKeySignatureError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidSignaturePublicKeySecurityLevelError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.PublicKeyIsDisabledError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.PublicKeySecurityLevelNotMetError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.WrongPublicKeyPurposeError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.IdentityPublicKeyIsDisabledError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.ValueError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.MissingDataContractIdError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DuplicatedIdentityPublicKeyError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DuplicatedIdentityPublicKeyIdError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.IdentityInsufficientBalanceError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidIdentityCreditWithdrawalTransitionCoreFeeError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.InvalidIdentityCreditWithdrawalTransitionOutputScriptError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.NotImplementedIdentityCreditWithdrawalTransitionPoolingError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DuplicatedIdentityPublicKeyIdStateError, AbstractConsensusError_1.AbstractConsensusError);
    extend_1.extend(dpp_module.DuplicatedIdentityPublicKeyStateError, AbstractConsensusError_1.AbstractConsensusError);
}
exports.patchConsensusErrors = patchConsensusErrors;
